{"mappings":"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","sources":["<anon>","src/assets/js/locomotive.js","node_modules/locomotive-scroll/dist/locomotive-scroll.mjs","node_modules/locomotive-scroll/core/IO.ts","node_modules/locomotive-scroll/utils/maths.ts","node_modules/locomotive-scroll/core/ScrollElement.ts","node_modules/locomotive-scroll/core/Core.ts","node_modules/locomotive-scroll/core/RO.ts","node_modules/locomotive-scroll/index.ts","node_modules/lenis/dist/lenis.mjs","node_modules/lenis/src/maths.js","node_modules/src/animate.ts","node_modules/src/dimensions.ts","node_modules/lenis/src/debounce.js","node_modules/src/emitter.ts","node_modules/src/virtual-scroll.ts","node_modules/src/index.ts"],"sourcesContent":["function $8ecb29f509dc0bd0$var$clamp(t, i, e) {\n    return Math.max(t, Math.min(i, e));\n}\nclass $8ecb29f509dc0bd0$var$Animate {\n    constructor(){\n        this.isRunning = !1, this.value = 0, this.from = 0, this.to = 0, this.duration = 0, this.currentTime = 0;\n    }\n    advance(t) {\n        var i;\n        if (!this.isRunning) return;\n        let e = !1;\n        if (this.duration && this.easing) {\n            this.currentTime += t;\n            const i = $8ecb29f509dc0bd0$var$clamp(0, this.currentTime / this.duration, 1);\n            e = i >= 1;\n            const s = e ? 1 : this.easing(i);\n            this.value = this.from + (this.to - this.from) * s;\n        } else this.lerp ? (this.value = function damp(t, i, e, s) {\n            return function lerp(t, i, e) {\n                return (1 - e) * t + e * i;\n            }(t, i, 1 - Math.exp(-e * s));\n        }(this.value, this.to, 60 * this.lerp, t), Math.round(this.value) === this.to && (this.value = this.to, e = !0)) : (this.value = this.to, e = !0);\n        e && this.stop(), null === (i = this.onUpdate) || void 0 === i || i.call(this, this.value, e);\n    }\n    stop() {\n        this.isRunning = !1;\n    }\n    fromTo(t, i, { lerp: e, duration: s, easing: o, onStart: n, onUpdate: l }) {\n        this.from = this.value = t, this.to = i, this.lerp = e, this.duration = s, this.easing = o, this.currentTime = 0, this.isRunning = !0, null == n || n(), this.onUpdate = l;\n    }\n}\nclass $8ecb29f509dc0bd0$var$Dimensions {\n    constructor({ wrapper: t, content: i, autoResize: e = !0, debounce: s = 250 } = {}){\n        this.width = 0, this.height = 0, this.scrollWidth = 0, this.scrollHeight = 0, this.resize = ()=>{\n            this.onWrapperResize(), this.onContentResize();\n        }, this.onWrapperResize = ()=>{\n            this.wrapper === window ? (this.width = window.innerWidth, this.height = window.innerHeight) : this.wrapper instanceof HTMLElement && (this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight);\n        }, this.onContentResize = ()=>{\n            this.wrapper === window ? (this.scrollHeight = this.content.scrollHeight, this.scrollWidth = this.content.scrollWidth) : this.wrapper instanceof HTMLElement && (this.scrollHeight = this.wrapper.scrollHeight, this.scrollWidth = this.wrapper.scrollWidth);\n        }, this.wrapper = t, this.content = i, e && (this.debouncedResize = function debounce(t, i) {\n            let e;\n            return function() {\n                let s = arguments, o = this;\n                clearTimeout(e), e = setTimeout(function() {\n                    t.apply(o, s);\n                }, i);\n            };\n        }(this.resize, s), this.wrapper === window ? window.addEventListener(\"resize\", this.debouncedResize, !1) : (this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize), this.wrapperResizeObserver.observe(this.wrapper)), this.contentResizeObserver = new ResizeObserver(this.debouncedResize), this.contentResizeObserver.observe(this.content)), this.resize();\n    }\n    destroy() {\n        var t, i;\n        null === (t = this.wrapperResizeObserver) || void 0 === t || t.disconnect(), null === (i = this.contentResizeObserver) || void 0 === i || i.disconnect(), window.removeEventListener(\"resize\", this.debouncedResize, !1);\n    }\n    get limit() {\n        return {\n            x: this.scrollWidth - this.width,\n            y: this.scrollHeight - this.height\n        };\n    }\n}\nclass $8ecb29f509dc0bd0$var$Emitter {\n    constructor(){\n        this.events = {};\n    }\n    emit(t, ...i) {\n        let e = this.events[t] || [];\n        for(let t = 0, s = e.length; t < s; t++)e[t](...i);\n    }\n    on(t, i) {\n        var e;\n        return (null === (e = this.events[t]) || void 0 === e ? void 0 : e.push(i)) || (this.events[t] = [\n            i\n        ]), ()=>{\n            var e;\n            this.events[t] = null === (e = this.events[t]) || void 0 === e ? void 0 : e.filter((t)=>i !== t);\n        };\n    }\n    off(t, i) {\n        var e;\n        this.events[t] = null === (e = this.events[t]) || void 0 === e ? void 0 : e.filter((t)=>i !== t);\n    }\n    destroy() {\n        this.events = {};\n    }\n}\nconst $8ecb29f509dc0bd0$var$t = 100 / 6;\nclass $8ecb29f509dc0bd0$var$VirtualScroll {\n    constructor(i, { wheelMultiplier: e = 1, touchMultiplier: s = 1 }){\n        this.lastDelta = {\n            x: 0,\n            y: 0\n        }, this.windowWidth = 0, this.windowHeight = 0, this.onTouchStart = (t)=>{\n            const { clientX: i, clientY: e } = t.targetTouches ? t.targetTouches[0] : t;\n            this.touchStart.x = i, this.touchStart.y = e, this.lastDelta = {\n                x: 0,\n                y: 0\n            }, this.emitter.emit(\"scroll\", {\n                deltaX: 0,\n                deltaY: 0,\n                event: t\n            });\n        }, this.onTouchMove = (t)=>{\n            var i, e, s, o;\n            const { clientX: n, clientY: l } = t.targetTouches ? t.targetTouches[0] : t, r = -(n - (null !== (e = null === (i = this.touchStart) || void 0 === i ? void 0 : i.x) && void 0 !== e ? e : 0)) * this.touchMultiplier, h = -(l - (null !== (o = null === (s = this.touchStart) || void 0 === s ? void 0 : s.y) && void 0 !== o ? o : 0)) * this.touchMultiplier;\n            this.touchStart.x = n, this.touchStart.y = l, this.lastDelta = {\n                x: r,\n                y: h\n            }, this.emitter.emit(\"scroll\", {\n                deltaX: r,\n                deltaY: h,\n                event: t\n            });\n        }, this.onTouchEnd = (t)=>{\n            this.emitter.emit(\"scroll\", {\n                deltaX: this.lastDelta.x,\n                deltaY: this.lastDelta.y,\n                event: t\n            });\n        }, this.onWheel = (i)=>{\n            let { deltaX: e, deltaY: s, deltaMode: o } = i;\n            e *= 1 === o ? $8ecb29f509dc0bd0$var$t : 2 === o ? this.windowWidth : 1, s *= 1 === o ? $8ecb29f509dc0bd0$var$t : 2 === o ? this.windowHeight : 1, e *= this.wheelMultiplier, s *= this.wheelMultiplier, this.emitter.emit(\"scroll\", {\n                deltaX: e,\n                deltaY: s,\n                event: i\n            });\n        }, this.onWindowResize = ()=>{\n            this.windowWidth = window.innerWidth, this.windowHeight = window.innerHeight;\n        }, this.element = i, this.wheelMultiplier = e, this.touchMultiplier = s, this.touchStart = {\n            x: null,\n            y: null\n        }, this.emitter = new $8ecb29f509dc0bd0$var$Emitter, window.addEventListener(\"resize\", this.onWindowResize, !1), this.onWindowResize(), this.element.addEventListener(\"wheel\", this.onWheel, {\n            passive: !1\n        }), this.element.addEventListener(\"touchstart\", this.onTouchStart, {\n            passive: !1\n        }), this.element.addEventListener(\"touchmove\", this.onTouchMove, {\n            passive: !1\n        }), this.element.addEventListener(\"touchend\", this.onTouchEnd, {\n            passive: !1\n        });\n    }\n    on(t, i) {\n        return this.emitter.on(t, i);\n    }\n    destroy() {\n        this.emitter.destroy(), window.removeEventListener(\"resize\", this.onWindowResize, !1), this.element.removeEventListener(\"wheel\", this.onWheel), this.element.removeEventListener(\"touchstart\", this.onTouchStart), this.element.removeEventListener(\"touchmove\", this.onTouchMove), this.element.removeEventListener(\"touchend\", this.onTouchEnd);\n    }\n}\nclass $8ecb29f509dc0bd0$export$2e2bcd8739ae039 {\n    constructor({ wrapper: t = window, content: i = document.documentElement, wheelEventsTarget: e = t, eventsTarget: s = e, smoothWheel: o = !0, syncTouch: n = !1, syncTouchLerp: l = .075, touchInertiaMultiplier: r = 35, duration: h, easing: a = (t)=>Math.min(1, 1.001 - Math.pow(2, -10 * t)), lerp: c = .1, infinite: d = !1, orientation: u = \"vertical\", gestureOrientation: p = \"vertical\", touchMultiplier: m = 1, wheelMultiplier: v = 1, autoResize: g = !0, prevent: w, virtualScroll: S, __experimental__naiveDimensions: f = !1 } = {}){\n        this.__isScrolling = !1, this.__isStopped = !1, this.__isLocked = !1, this.userData = {}, this.lastVelocity = 0, this.velocity = 0, this.direction = 0, this.onPointerDown = (t)=>{\n            1 === t.button && this.reset();\n        }, this.onVirtualScroll = (t)=>{\n            if (\"function\" == typeof this.options.virtualScroll && !1 === this.options.virtualScroll(t)) return;\n            const { deltaX: i, deltaY: e, event: s } = t;\n            if (this.emitter.emit(\"virtual-scroll\", {\n                deltaX: i,\n                deltaY: e,\n                event: s\n            }), s.ctrlKey) return;\n            const o = s.type.includes(\"touch\"), n = s.type.includes(\"wheel\");\n            this.isTouching = \"touchstart\" === s.type || \"touchmove\" === s.type;\n            if (this.options.syncTouch && o && \"touchstart\" === s.type && !this.isStopped && !this.isLocked) return void this.reset();\n            const l = 0 === i && 0 === e, r = \"vertical\" === this.options.gestureOrientation && 0 === e || \"horizontal\" === this.options.gestureOrientation && 0 === i;\n            if (l || r) return;\n            let h = s.composedPath();\n            h = h.slice(0, h.indexOf(this.rootElement));\n            const a = this.options.prevent;\n            if (h.find((t)=>{\n                var i, e, s, l, r;\n                return t instanceof Element && (\"function\" == typeof a && (null == a ? void 0 : a(t)) || (null === (i = t.hasAttribute) || void 0 === i ? void 0 : i.call(t, \"data-lenis-prevent\")) || o && (null === (e = t.hasAttribute) || void 0 === e ? void 0 : e.call(t, \"data-lenis-prevent-touch\")) || n && (null === (s = t.hasAttribute) || void 0 === s ? void 0 : s.call(t, \"data-lenis-prevent-wheel\")) || (null === (l = t.classList) || void 0 === l ? void 0 : l.contains(\"lenis\")) && !(null === (r = t.classList) || void 0 === r ? void 0 : r.contains(\"lenis-stopped\")));\n            })) return;\n            if (this.isStopped || this.isLocked) return void s.preventDefault();\n            if (!(this.options.syncTouch && o || this.options.smoothWheel && n)) return this.isScrolling = \"native\", void this.animate.stop();\n            s.preventDefault();\n            let c = e;\n            \"both\" === this.options.gestureOrientation ? c = Math.abs(e) > Math.abs(i) ? e : i : \"horizontal\" === this.options.gestureOrientation && (c = i);\n            const d = o && this.options.syncTouch, u = o && \"touchend\" === s.type && Math.abs(c) > 5;\n            u && (c = this.velocity * this.options.touchInertiaMultiplier), this.scrollTo(this.targetScroll + c, Object.assign({\n                programmatic: !1\n            }, d ? {\n                lerp: u ? this.options.syncTouchLerp : 1\n            } : {\n                lerp: this.options.lerp,\n                duration: this.options.duration,\n                easing: this.options.easing\n            }));\n        }, this.onNativeScroll = ()=>{\n            if (clearTimeout(this.__resetVelocityTimeout), delete this.__resetVelocityTimeout, this.__preventNextNativeScrollEvent) delete this.__preventNextNativeScrollEvent;\n            else if (!1 === this.isScrolling || \"native\" === this.isScrolling) {\n                const t = this.animatedScroll;\n                this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity, this.velocity = this.animatedScroll - t, this.direction = Math.sign(this.animatedScroll - t), this.isScrolling = \"native\", this.emit(), 0 !== this.velocity && (this.__resetVelocityTimeout = setTimeout(()=>{\n                    this.lastVelocity = this.velocity, this.velocity = 0, this.isScrolling = !1, this.emit();\n                }, 400));\n            }\n        }, window.lenisVersion = \"1.1.9\", t && t !== document.documentElement && t !== document.body || (t = window), this.options = {\n            wrapper: t,\n            content: i,\n            wheelEventsTarget: e,\n            eventsTarget: s,\n            smoothWheel: o,\n            syncTouch: n,\n            syncTouchLerp: l,\n            touchInertiaMultiplier: r,\n            duration: h,\n            easing: a,\n            lerp: c,\n            infinite: d,\n            gestureOrientation: p,\n            orientation: u,\n            touchMultiplier: m,\n            wheelMultiplier: v,\n            autoResize: g,\n            prevent: w,\n            virtualScroll: S,\n            __experimental__naiveDimensions: f\n        }, this.animate = new $8ecb29f509dc0bd0$var$Animate, this.emitter = new $8ecb29f509dc0bd0$var$Emitter, this.dimensions = new $8ecb29f509dc0bd0$var$Dimensions({\n            wrapper: t,\n            content: i,\n            autoResize: g\n        }), this.updateClassName(), this.userData = {}, this.time = 0, this.velocity = this.lastVelocity = 0, this.isLocked = !1, this.isStopped = !1, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, !1), this.options.wrapper.addEventListener(\"pointerdown\", this.onPointerDown, !1), this.virtualScroll = new $8ecb29f509dc0bd0$var$VirtualScroll(s, {\n            touchMultiplier: m,\n            wheelMultiplier: v\n        }), this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    }\n    destroy() {\n        this.emitter.destroy(), this.options.wrapper.removeEventListener(\"scroll\", this.onNativeScroll, !1), this.options.wrapper.removeEventListener(\"pointerdown\", this.onPointerDown, !1), this.virtualScroll.destroy(), this.dimensions.destroy(), this.cleanUpClassName();\n    }\n    on(t, i) {\n        return this.emitter.on(t, i);\n    }\n    off(t, i) {\n        return this.emitter.off(t, i);\n    }\n    setScroll(t) {\n        this.isHorizontal ? this.rootElement.scrollLeft = t : this.rootElement.scrollTop = t;\n    }\n    resize() {\n        this.dimensions.resize();\n    }\n    emit() {\n        this.emitter.emit(\"scroll\", this);\n    }\n    reset() {\n        this.isLocked = !1, this.isScrolling = !1, this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity = 0, this.animate.stop();\n    }\n    start() {\n        this.isStopped && (this.isStopped = !1, this.reset());\n    }\n    stop() {\n        this.isStopped || (this.isStopped = !0, this.animate.stop(), this.reset());\n    }\n    raf(t) {\n        const i = t - (this.time || t);\n        this.time = t, this.animate.advance(.001 * i);\n    }\n    scrollTo(t, { offset: i = 0, immediate: e = !1, lock: s = !1, duration: o = this.options.duration, easing: n = this.options.easing, lerp: l = this.options.lerp, onStart: r, onComplete: h, force: a = !1, programmatic: c = !0, userData: d = {} } = {}) {\n        if (!this.isStopped && !this.isLocked || a) {\n            if (\"string\" == typeof t && [\n                \"top\",\n                \"left\",\n                \"start\"\n            ].includes(t)) t = 0;\n            else if (\"string\" == typeof t && [\n                \"bottom\",\n                \"right\",\n                \"end\"\n            ].includes(t)) t = this.limit;\n            else {\n                let e;\n                if (\"string\" == typeof t ? e = document.querySelector(t) : t instanceof HTMLElement && (null == t ? void 0 : t.nodeType) && (e = t), e) {\n                    if (this.options.wrapper !== window) {\n                        const t = this.rootElement.getBoundingClientRect();\n                        i -= this.isHorizontal ? t.left : t.top;\n                    }\n                    const s = e.getBoundingClientRect();\n                    t = (this.isHorizontal ? s.left : s.top) + this.animatedScroll;\n                }\n            }\n            if (\"number\" == typeof t && (t += i, t = Math.round(t), this.options.infinite ? c && (this.targetScroll = this.animatedScroll = this.scroll) : t = $8ecb29f509dc0bd0$var$clamp(0, t, this.limit), t !== this.targetScroll)) {\n                if (this.userData = d, e) return this.animatedScroll = this.targetScroll = t, this.setScroll(this.scroll), this.reset(), this.preventNextNativeScrollEvent(), this.emit(), null == h || h(this), void (this.userData = {});\n                c || (this.targetScroll = t), this.animate.fromTo(this.animatedScroll, t, {\n                    duration: o,\n                    easing: n,\n                    lerp: l,\n                    onStart: ()=>{\n                        s && (this.isLocked = !0), this.isScrolling = \"smooth\", null == r || r(this);\n                    },\n                    onUpdate: (t, i)=>{\n                        this.isScrolling = \"smooth\", this.lastVelocity = this.velocity, this.velocity = t - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = t, this.setScroll(this.scroll), c && (this.targetScroll = t), i || this.emit(), i && (this.reset(), this.emit(), null == h || h(this), this.userData = {}, this.preventNextNativeScrollEvent());\n                    }\n                });\n            }\n        }\n    }\n    preventNextNativeScrollEvent() {\n        this.__preventNextNativeScrollEvent = !0, requestAnimationFrame(()=>{\n            delete this.__preventNextNativeScrollEvent;\n        });\n    }\n    get rootElement() {\n        return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n    }\n    get limit() {\n        return this.options.__experimental__naiveDimensions ? this.isHorizontal ? this.rootElement.scrollWidth - this.rootElement.clientWidth : this.rootElement.scrollHeight - this.rootElement.clientHeight : this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n    }\n    get isHorizontal() {\n        return \"horizontal\" === this.options.orientation;\n    }\n    get actualScroll() {\n        return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;\n    }\n    get scroll() {\n        return this.options.infinite ? function modulo(t, i) {\n            return (t % i + i) % i;\n        }(this.animatedScroll, this.limit) : this.animatedScroll;\n    }\n    get progress() {\n        return 0 === this.limit ? 1 : this.scroll / this.limit;\n    }\n    get isScrolling() {\n        return this.__isScrolling;\n    }\n    set isScrolling(t) {\n        this.__isScrolling !== t && (this.__isScrolling = t, this.updateClassName());\n    }\n    get isStopped() {\n        return this.__isStopped;\n    }\n    set isStopped(t) {\n        this.__isStopped !== t && (this.__isStopped = t, this.updateClassName());\n    }\n    get isLocked() {\n        return this.__isLocked;\n    }\n    set isLocked(t) {\n        this.__isLocked !== t && (this.__isLocked = t, this.updateClassName());\n    }\n    get isSmooth() {\n        return \"smooth\" === this.isScrolling;\n    }\n    get className() {\n        let t = \"lenis\";\n        return this.isStopped && (t += \" lenis-stopped\"), this.isLocked && (t += \" lenis-locked\"), this.isScrolling && (t += \" lenis-scrolling\"), \"smooth\" === this.isScrolling && (t += \" lenis-smooth\"), t;\n    }\n    updateClassName() {\n        this.cleanUpClassName(), this.rootElement.className = `${this.rootElement.className} ${this.className}`.trim();\n    }\n    cleanUpClassName() {\n        this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n    }\n}\n\n\nfunction $44dff8ba698aec05$var$e(t, e) {\n    (null == e || e > t.length) && (e = t.length);\n    for(var s = 0, i = Array(e); s < e; s++)i[s] = t[s];\n    return i;\n}\nfunction $44dff8ba698aec05$var$s(t, s) {\n    var i = \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n    if (i) return (i = i.call(t)).next.bind(i);\n    if (Array.isArray(t) || (i = function(t, s) {\n        if (t) {\n            if (\"string\" == typeof t) return $44dff8ba698aec05$var$e(t, s);\n            var i = ({}).toString.call(t).slice(8, -1);\n            return \"Object\" === i && t.constructor && (i = t.constructor.name), \"Map\" === i || \"Set\" === i ? Array.from(t) : \"Arguments\" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? $44dff8ba698aec05$var$e(t, s) : void 0;\n        }\n    }(t)) || s && t && \"number\" == typeof t.length) {\n        i && (t = i);\n        var r = 0;\n        return function() {\n            return r >= t.length ? {\n                done: !0\n            } : {\n                done: !1,\n                value: t[r++]\n            };\n        };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction $44dff8ba698aec05$var$i() {\n    return $44dff8ba698aec05$var$i = Object.assign ? Object.assign.bind() : function(t) {\n        for(var e = 1; e < arguments.length; e++){\n            var s = arguments[e];\n            for(var i in s)({}).hasOwnProperty.call(s, i) && (t[i] = s[i]);\n        }\n        return t;\n    }, $44dff8ba698aec05$var$i.apply(null, arguments);\n}\nvar $44dff8ba698aec05$var$r = /*#__PURE__*/ function() {\n    function t(t) {\n        var e = t.scrollElements, s = t.rootMargin, i = void 0 === s ? \"-1px -1px -1px -1px\" : s, r = t.IORaf;\n        this.scrollElements = void 0, this.rootMargin = void 0, this.IORaf = void 0, this.observer = void 0, this.scrollElements = e, this.rootMargin = i, this.IORaf = r, this._init();\n    }\n    var e = t.prototype;\n    return e._init = function() {\n        var t = this;\n        this.observer = new IntersectionObserver(function(e) {\n            e.forEach(function(e) {\n                var s = t.scrollElements.find(function(t) {\n                    return t.$el === e.target;\n                });\n                e.isIntersecting ? (s && (s.isAlreadyIntersected = !0), t._setInview(e)) : s && s.isAlreadyIntersected && t._setOutOfView(e);\n            });\n        }, {\n            rootMargin: this.rootMargin\n        });\n        for(var e, i = $44dff8ba698aec05$var$s(this.scrollElements); !(e = i()).done;)this.observe(e.value.$el);\n    }, e.destroy = function() {\n        this.observer.disconnect();\n    }, e.observe = function(t) {\n        t && this.observer.observe(t);\n    }, e.unobserve = function(t) {\n        t && this.observer.unobserve(t);\n    }, e._setInview = function(t) {\n        var e = this.scrollElements.find(function(e) {\n            return e.$el === t.target;\n        });\n        this.IORaf && (null == e || e.setInteractivityOn()), !this.IORaf && (null == e || e.setInview());\n    }, e._setOutOfView = function(t) {\n        var e = this.scrollElements.find(function(e) {\n            return e.$el === t.target;\n        });\n        this.IORaf && (null == e || e.setInteractivityOff()), !this.IORaf && (null == e || e.setOutOfView()), null != e && e.attributes.scrollRepeat || this.IORaf || this.unobserve(t.target);\n    }, t;\n}();\nfunction $44dff8ba698aec05$var$n(t, e, s, i, r) {\n    return s + ((r - t) / (e - t) * (i - s) || 0);\n}\nfunction $44dff8ba698aec05$var$o(t, e) {\n    return t.reduce(function(t, s) {\n        return Math.abs(s - e) < Math.abs(t - e) ? s : t;\n    });\n}\nvar $44dff8ba698aec05$var$l = /*#__PURE__*/ function() {\n    function t(t) {\n        var e, s, i, r, n, o = t.$el, l = t.id, a = t.modularInstance, c = t.subscribeElementUpdateFn, h = t.unsubscribeElementUpdateFn, u = t.needRaf, d = t.scrollOrientation;\n        this.$el = void 0, this.id = void 0, this.needRaf = void 0, this.attributes = void 0, this.scrollOrientation = void 0, this.isAlreadyIntersected = void 0, this.intersection = void 0, this.metrics = void 0, this.currentScroll = void 0, this.translateValue = void 0, this.progress = void 0, this.lastProgress = void 0, this.modularInstance = void 0, this.progressModularModules = void 0, this.isInview = void 0, this.isInteractive = void 0, this.isInFold = void 0, this.isFirstResize = void 0, this.subscribeElementUpdateFn = void 0, this.unsubscribeElementUpdateFn = void 0, this.$el = o, this.id = l, this.needRaf = u, this.scrollOrientation = d, this.modularInstance = a, this.subscribeElementUpdateFn = c, this.unsubscribeElementUpdateFn = h, this.attributes = {\n            scrollClass: null != (e = this.$el.dataset.scrollClass) ? e : \"is-inview\",\n            scrollOffset: null != (s = this.$el.dataset.scrollOffset) ? s : \"0,0\",\n            scrollPosition: null != (i = this.$el.dataset.scrollPosition) ? i : \"start,end\",\n            scrollModuleProgress: null != this.$el.dataset.scrollModuleProgress,\n            scrollCssProgress: null != this.$el.dataset.scrollCssProgress,\n            scrollEventProgress: null != (r = this.$el.dataset.scrollEventProgress) ? r : null,\n            scrollSpeed: null != this.$el.dataset.scrollSpeed ? parseFloat(this.$el.dataset.scrollSpeed) : null,\n            scrollRepeat: null != this.$el.dataset.scrollRepeat,\n            scrollCall: null != (n = this.$el.dataset.scrollCall) ? n : null,\n            scrollCallSelf: null != this.$el.dataset.scrollCallSelf,\n            scrollIgnoreFold: null != this.$el.dataset.scrollIgnoreFold,\n            scrollEnableTouchSpeed: null != this.$el.dataset.scrollEnableTouchSpeed\n        }, this.intersection = {\n            start: 0,\n            end: 0\n        }, this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {}\n        }, this.currentScroll = \"vertical\" === this.scrollOrientation ? window.scrollY : window.scrollX, this.translateValue = 0, this.progress = 0, this.lastProgress = null, this.progressModularModules = [], this.isInview = !1, this.isInteractive = !1, this.isAlreadyIntersected = !1, this.isInFold = !1, this.isFirstResize = !0, this._init();\n    }\n    var e = t.prototype;\n    return e._init = function() {\n        this.needRaf && (this.modularInstance && this.attributes.scrollModuleProgress && this._getProgressModularModules(), this._resize());\n    }, e.onResize = function(t) {\n        this.currentScroll = t.currentScroll, this._resize();\n    }, e.onRender = function(t) {\n        var e = t.smooth, s = \"vertical\" === this.scrollOrientation ? window.innerHeight : window.innerWidth;\n        if (this.currentScroll = t.currentScroll, this._computeProgress(), this.attributes.scrollSpeed && !isNaN(this.attributes.scrollSpeed)) {\n            if (this.attributes.scrollEnableTouchSpeed || e) {\n                if (this.isInFold) {\n                    var i = Math.max(0, this.progress);\n                    this.translateValue = i * s * this.attributes.scrollSpeed * -1;\n                } else {\n                    var r = $44dff8ba698aec05$var$n(0, 1, -1, 1, this.progress);\n                    this.translateValue = r * s * this.attributes.scrollSpeed * -1;\n                }\n                this.$el.style.transform = \"vertical\" === this.scrollOrientation ? \"translate3d(0, \" + this.translateValue + \"px, 0)\" : \"translate3d(\" + this.translateValue + \"px, 0, 0)\";\n            } else this.translateValue && (this.$el.style.transform = \"translate3d(0, 0, 0)\"), this.translateValue = 0;\n        }\n    }, e.setInview = function() {\n        if (!this.isInview) {\n            this.isInview = !0, this.$el.classList.add(this.attributes.scrollClass);\n            var t = this._getScrollCallFrom();\n            this.attributes.scrollCall && this._dispatchCall(\"enter\", t);\n        }\n    }, e.setOutOfView = function() {\n        if (this.isInview && this.attributes.scrollRepeat) {\n            this.isInview = !1, this.$el.classList.remove(this.attributes.scrollClass);\n            var t = this._getScrollCallFrom();\n            this.attributes.scrollCall && this._dispatchCall(\"leave\", t);\n        }\n    }, e.setInteractivityOn = function() {\n        this.isInteractive || (this.isInteractive = !0, this.subscribeElementUpdateFn(this));\n    }, e.setInteractivityOff = function() {\n        this.isInteractive && (this.isInteractive = !1, this.unsubscribeElementUpdateFn(this), null != this.lastProgress && this._computeProgress($44dff8ba698aec05$var$o([\n            0,\n            1\n        ], this.lastProgress)));\n    }, e._resize = function() {\n        this.metrics.bcr = this.$el.getBoundingClientRect(), this._computeMetrics(), this._computeIntersection(), this.isFirstResize && (this.isFirstResize = !1, this.isInFold && this.setInview());\n    }, e._computeMetrics = function() {\n        var t = this.metrics.bcr, e = \"vertical\" === this.scrollOrientation ? window.innerHeight : window.innerWidth, s = \"vertical\" === this.scrollOrientation ? t.height : t.width;\n        this.metrics.offsetStart = this.currentScroll + (\"vertical\" === this.scrollOrientation ? t.top : t.left) - this.translateValue, this.metrics.offsetEnd = this.metrics.offsetStart + s, this.isInFold = this.metrics.offsetStart < e && !this.attributes.scrollIgnoreFold;\n    }, e._computeIntersection = function() {\n        var t = \"vertical\" === this.scrollOrientation ? window.innerHeight : window.innerWidth, e = \"vertical\" === this.scrollOrientation ? this.metrics.bcr.height : this.metrics.bcr.width, s = this.attributes.scrollOffset.split(\",\"), i = null != s[0] ? s[0].trim() : \"0\", r = null != s[1] ? s[1].trim() : \"0\", n = this.attributes.scrollPosition.split(\",\"), o = null != n[0] ? n[0].trim() : \"start\", l = null != n[1] ? n[1].trim() : \"end\", a = i.includes(\"%\") ? t * parseInt(i.replace(\"%\", \"\").trim()) * .01 : parseInt(i), c = r.includes(\"%\") ? t * parseInt(r.replace(\"%\", \"\").trim()) * .01 : parseInt(r);\n        switch(this.isInFold && (o = \"fold\"), o){\n            case \"start\":\n            default:\n                this.intersection.start = this.metrics.offsetStart - t + a;\n                break;\n            case \"middle\":\n                this.intersection.start = this.metrics.offsetStart - t + a + .5 * e;\n                break;\n            case \"end\":\n                this.intersection.start = this.metrics.offsetStart - t + a + e;\n                break;\n            case \"fold\":\n                this.intersection.start = 0;\n        }\n        switch(l){\n            case \"start\":\n                this.intersection.end = this.metrics.offsetStart - c;\n                break;\n            case \"middle\":\n                this.intersection.end = this.metrics.offsetStart - c + .5 * e;\n                break;\n            default:\n                this.intersection.end = this.metrics.offsetStart - c + e;\n        }\n        if (this.intersection.end <= this.intersection.start) switch(l){\n            case \"start\":\n            default:\n                this.intersection.end = this.intersection.start + 1;\n                break;\n            case \"middle\":\n                this.intersection.end = this.intersection.start + .5 * e;\n                break;\n            case \"end\":\n                this.intersection.end = this.intersection.start + e;\n        }\n    }, e._computeProgress = function(t) {\n        var e, i = null != t ? t : (e = $44dff8ba698aec05$var$n(this.intersection.start, this.intersection.end, 0, 1, this.currentScroll)) < 0 ? 0 : e > 1 ? 1 : e;\n        if (this.progress = i, i != this.lastProgress) {\n            if (this.lastProgress = i, this.attributes.scrollCssProgress && this._setCssProgress(i), this.attributes.scrollEventProgress && this._setCustomEventProgress(i), this.attributes.scrollModuleProgress) for(var r, o = $44dff8ba698aec05$var$s(this.progressModularModules); !(r = o()).done;){\n                var l = r.value;\n                this.modularInstance && this.modularInstance.call(\"onScrollProgress\", i, l.moduleName, l.moduleId);\n            }\n            i > 0 && i < 1 && this.setInview(), 0 === i && this.setOutOfView(), 1 === i && this.setOutOfView();\n        }\n    }, e._setCssProgress = function(t) {\n        void 0 === t && (t = 0), this.$el.style.setProperty(\"--progress\", t.toString());\n    }, e._setCustomEventProgress = function(t) {\n        void 0 === t && (t = 0);\n        var e = this.attributes.scrollEventProgress;\n        if (e) {\n            var s = new CustomEvent(e, {\n                detail: {\n                    target: this.$el,\n                    progress: t\n                }\n            });\n            window.dispatchEvent(s);\n        }\n    }, e._getProgressModularModules = function() {\n        if (this.modularInstance) {\n            var t = Object.keys(this.$el.dataset).filter(function(t) {\n                return t.includes(\"module\");\n            }), e = Object.entries(this.modularInstance.modules);\n            if (t.length) for(var i, r = $44dff8ba698aec05$var$s(t); !(i = r()).done;){\n                var n = this.$el.dataset[i.value];\n                if (!n) return;\n                for(var o, l = $44dff8ba698aec05$var$s(e); !(o = l()).done;){\n                    var a = o.value;\n                    n in a[1] && this.progressModularModules.push({\n                        moduleName: a[0],\n                        moduleId: n\n                    });\n                }\n            }\n        }\n    }, e._getScrollCallFrom = function() {\n        var t = $44dff8ba698aec05$var$o([\n            this.intersection.start,\n            this.intersection.end\n        ], this.currentScroll);\n        return this.intersection.start === t ? \"start\" : \"end\";\n    }, e._dispatchCall = function(t, e) {\n        var s, i, r = null == (s = this.attributes.scrollCall) ? void 0 : s.split(\",\"), n = null == (i = this.attributes) ? void 0 : i.scrollCallSelf;\n        if (r && r.length > 1) {\n            var o, l, a = r[0], c = r[1], h = r[2];\n            l = n ? this.$el.dataset[\"module\" + c.trim()] : h, this.modularInstance && this.modularInstance.call(a.trim(), {\n                target: this.$el,\n                way: t,\n                from: e\n            }, c.trim(), null == (o = l) ? void 0 : o.trim());\n        } else if (r) {\n            var u = new CustomEvent(r[0], {\n                detail: {\n                    target: this.$el,\n                    way: t,\n                    from: e\n                }\n            });\n            window.dispatchEvent(u);\n        }\n    }, t;\n}(), $44dff8ba698aec05$var$a = [\n    \"scrollOffset\",\n    \"scrollPosition\",\n    \"scrollModuleProgress\",\n    \"scrollCssProgress\",\n    \"scrollEventProgress\",\n    \"scrollSpeed\"\n], $44dff8ba698aec05$var$c = /*#__PURE__*/ function() {\n    function t(t) {\n        var e = t.$el, s = t.modularInstance, i = t.triggerRootMargin, r = t.rafRootMargin, n = t.scrollOrientation;\n        this.$scrollContainer = void 0, this.modularInstance = void 0, this.triggerRootMargin = void 0, this.rafRootMargin = void 0, this.scrollElements = void 0, this.triggeredScrollElements = void 0, this.RAFScrollElements = void 0, this.scrollElementsToUpdate = void 0, this.IOTriggerInstance = void 0, this.IORafInstance = void 0, this.scrollOrientation = void 0, e ? (this.$scrollContainer = e, this.modularInstance = s, this.scrollOrientation = n, this.triggerRootMargin = null != i ? i : \"-1px -1px -1px -1px\", this.rafRootMargin = null != r ? r : \"100% 100% 100% 100%\", this.scrollElements = [], this.triggeredScrollElements = [], this.RAFScrollElements = [], this.scrollElementsToUpdate = [], this._init()) : console.error(\"Please provide a DOM Element as scrollContainer\");\n    }\n    var e = t.prototype;\n    return e._init = function() {\n        var t = this.$scrollContainer.querySelectorAll(\"[data-scroll]\"), e = Array.from(t);\n        this._subscribeScrollElements(e), this.IOTriggerInstance = new $44dff8ba698aec05$var$r({\n            scrollElements: [].concat(this.triggeredScrollElements),\n            rootMargin: this.triggerRootMargin,\n            IORaf: !1\n        }), this.IORafInstance = new $44dff8ba698aec05$var$r({\n            scrollElements: [].concat(this.RAFScrollElements),\n            rootMargin: this.rafRootMargin,\n            IORaf: !0\n        });\n    }, e.destroy = function() {\n        this.IOTriggerInstance.destroy(), this.IORafInstance.destroy(), this._unsubscribeAllScrollElements();\n    }, e.onResize = function(t) {\n        for(var e, i = t.currentScroll, r = $44dff8ba698aec05$var$s(this.RAFScrollElements); !(e = r()).done;)e.value.onResize({\n            currentScroll: i\n        });\n    }, e.onRender = function(t) {\n        for(var e, i = t.currentScroll, r = t.smooth, n = $44dff8ba698aec05$var$s(this.scrollElementsToUpdate); !(e = n()).done;)e.value.onRender({\n            currentScroll: i,\n            smooth: r\n        });\n    }, e.removeScrollElements = function(t) {\n        var e = this, s = t.querySelectorAll(\"[data-scroll]\");\n        if (s.length) {\n            for(var i = 0; i < this.triggeredScrollElements.length; i++){\n                var r = this.triggeredScrollElements[i];\n                Array.from(s).indexOf(r.$el) > -1 && (this.IOTriggerInstance.unobserve(r.$el), this.triggeredScrollElements.splice(i, 1));\n            }\n            for(var n = 0; n < this.RAFScrollElements.length; n++){\n                var o = this.RAFScrollElements[n];\n                Array.from(s).indexOf(o.$el) > -1 && (this.IORafInstance.unobserve(o.$el), this.RAFScrollElements.splice(n, 1));\n            }\n            s.forEach(function(t) {\n                var s = e.scrollElementsToUpdate.find(function(e) {\n                    return e.$el === t;\n                }), i = e.scrollElements.find(function(e) {\n                    return e.$el === t;\n                });\n                s && e._unsubscribeElementUpdate(s), i && (e.scrollElements = e.scrollElements.filter(function(t) {\n                    return t.id != i.id;\n                }));\n            });\n        }\n    }, e.addScrollElements = function(t) {\n        var e = t.querySelectorAll(\"[data-scroll]\"), s = [];\n        this.scrollElements.forEach(function(t) {\n            s.push(t.id);\n        });\n        var i = Math.max.apply(Math, s.concat([\n            0\n        ])) + 1, r = Array.from(e);\n        this._subscribeScrollElements(r, i, !0);\n    }, e._subscribeScrollElements = function(t, e, s) {\n        void 0 === e && (e = 0), void 0 === s && (s = !1);\n        for(var i = 0; i < t.length; i++){\n            var r = t[i], n = this._checkRafNeeded(r), o = new $44dff8ba698aec05$var$l({\n                $el: r,\n                id: e + i,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn: this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn: this._unsubscribeElementUpdate.bind(this),\n                needRaf: n\n            });\n            this.scrollElements.push(o), n ? (this.RAFScrollElements.push(o), s && (this.IORafInstance.scrollElements.push(o), this.IORafInstance.observe(o.$el))) : (this.triggeredScrollElements.push(o), s && (this.IOTriggerInstance.scrollElements.push(o), this.IOTriggerInstance.observe(o.$el)));\n        }\n    }, e._unsubscribeAllScrollElements = function() {\n        this.scrollElements = [], this.RAFScrollElements = [], this.triggeredScrollElements = [], this.scrollElementsToUpdate = [];\n    }, e._subscribeElementUpdate = function(t) {\n        this.scrollElementsToUpdate.push(t);\n    }, e._unsubscribeElementUpdate = function(t) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(function(e) {\n            return e.id != t.id;\n        });\n    }, e._checkRafNeeded = function(t) {\n        var e = [].concat($44dff8ba698aec05$var$a), i = function(t) {\n            e = e.filter(function(e) {\n                return e != t;\n            });\n        };\n        if (t.dataset.scrollOffset) {\n            if (\"0,0\" != t.dataset.scrollOffset.split(\",\").map(function(t) {\n                return t.replace(\"%\", \"\").trim();\n            }).join(\",\")) return !0;\n            i(\"scrollOffset\");\n        } else i(\"scrollOffset\");\n        if (t.dataset.scrollPosition) {\n            if (\"top,bottom\" != t.dataset.scrollPosition.trim()) return !0;\n            i(\"scrollPosition\");\n        } else i(\"scrollPosition\");\n        if (t.dataset.scrollSpeed && !isNaN(parseFloat(t.dataset.scrollSpeed))) return !0;\n        i(\"scrollSpeed\");\n        for(var r, n = $44dff8ba698aec05$var$s(e); !(r = n()).done;)if (r.value in t.dataset) return !0;\n        return !1;\n    }, t;\n}(), $44dff8ba698aec05$var$h = /*#__PURE__*/ function() {\n    function t(t) {\n        var e = t.resizeElements, s = t.resizeCallback, i = void 0 === s ? function() {} : s;\n        this.$resizeElements = void 0, this.isFirstObserve = void 0, this.observer = void 0, this.resizeCallback = void 0, this.$resizeElements = e, this.resizeCallback = i, this.isFirstObserve = !0, this._init();\n    }\n    var e = t.prototype;\n    return e._init = function() {\n        var t = this;\n        this.observer = new ResizeObserver(function(e) {\n            !t.isFirstObserve && (null == t.resizeCallback || t.resizeCallback()), t.isFirstObserve = !1;\n        });\n        for(var e, i = $44dff8ba698aec05$var$s(this.$resizeElements); !(e = i()).done;)this.observer.observe(e.value);\n    }, e.destroy = function() {\n        this.observer.disconnect();\n    }, t;\n}(), $44dff8ba698aec05$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    function e(t) {\n        var e = void 0 === t ? {} : t, s = e.lenisOptions, i = void 0 === s ? {} : s, r = e.modularInstance, n = e.triggerRootMargin, o = e.rafRootMargin, l = e.autoResize, a = void 0 === l || l, c = e.autoStart, h = void 0 === c || c, u = e.scrollCallback, d = void 0 === u ? function() {} : u, f = e.initCustomTicker, v = e.destroyCustomTicker;\n        this.rafPlaying = void 0, this.lenisInstance = void 0, this.coreInstance = void 0, this.lenisOptions = void 0, this.modularInstance = void 0, this.triggerRootMargin = void 0, this.rafRootMargin = void 0, this.rafInstance = void 0, this.autoResize = void 0, this.autoStart = void 0, this.ROInstance = void 0, this.initCustomTicker = void 0, this.destroyCustomTicker = void 0, this._onRenderBind = void 0, this._onResizeBind = void 0, this._onScrollToBind = void 0;\n        for(var m = 0, g = Object.entries(i); m < g.length; m++){\n            var b = g[m][0];\n            [\n                \"wrapper\",\n                \"content\",\n                \"infinite\"\n            ].includes(b) && console.warn('Warning: Key \"' + b + '\" is not possible to edit in Locomotive Scroll.');\n        }\n        Object.assign(this, {\n            lenisOptions: i,\n            modularInstance: r,\n            triggerRootMargin: n,\n            rafRootMargin: o,\n            autoResize: a,\n            autoStart: h,\n            scrollCallback: d,\n            initCustomTicker: f,\n            destroyCustomTicker: v\n        }), this._onRenderBind = this._onRender.bind(this), this._onScrollToBind = this._onScrollTo.bind(this), this._onResizeBind = this._onResize.bind(this), this.rafPlaying = !1, this._init();\n    }\n    var s = e.prototype;\n    return s._init = function() {\n        var e, s = this;\n        this.lenisInstance = new (0, $8ecb29f509dc0bd0$export$2e2bcd8739ae039)($44dff8ba698aec05$var$i({}, this.lenisOptions, {\n            wrapper: window,\n            content: document.documentElement,\n            infinite: !1\n        })), null == (e = this.lenisInstance) || e.on(\"scroll\", this.scrollCallback), document.documentElement.setAttribute(\"data-scroll-orientation\", this.lenisInstance.options.orientation), requestAnimationFrame(function() {\n            s.coreInstance = new $44dff8ba698aec05$var$c({\n                $el: s.lenisInstance.rootElement,\n                modularInstance: s.modularInstance,\n                triggerRootMargin: s.triggerRootMargin,\n                rafRootMargin: s.rafRootMargin,\n                scrollOrientation: s.lenisInstance.options.orientation\n            }), s._bindEvents(), s.initCustomTicker && !s.destroyCustomTicker ? console.warn(\"initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.\") : !s.initCustomTicker && s.destroyCustomTicker && console.warn(\"destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.\"), s.autoStart && s.start();\n        });\n    }, s.destroy = function() {\n        var t, e = this;\n        this.stop(), this._unbindEvents(), this.lenisInstance.destroy(), null == (t = this.coreInstance) || t.destroy(), requestAnimationFrame(function() {\n            var t;\n            null == (t = e.coreInstance) || t.destroy();\n        });\n    }, s._bindEvents = function() {\n        this._bindScrollToEvents(), this.autoResize && (\"ResizeObserver\" in window ? this.ROInstance = new $44dff8ba698aec05$var$h({\n            resizeElements: [\n                document.body\n            ],\n            resizeCallback: this._onResizeBind\n        }) : window.addEventListener(\"resize\", this._onResizeBind));\n    }, s._unbindEvents = function() {\n        this._unbindScrollToEvents(), this.autoResize && (\"ResizeObserver\" in window ? this.ROInstance && this.ROInstance.destroy() : window.removeEventListener(\"resize\", this._onResizeBind));\n    }, s._bindScrollToEvents = function(t) {\n        var e = this, s = t || this.lenisInstance.rootElement, i = null == s ? void 0 : s.querySelectorAll(\"[data-scroll-to]\");\n        (null == i ? void 0 : i.length) && i.forEach(function(t) {\n            t.addEventListener(\"click\", e._onScrollToBind, !1);\n        });\n    }, s._unbindScrollToEvents = function(t) {\n        var e = this, s = t || this.lenisInstance.rootElement, i = null == s ? void 0 : s.querySelectorAll(\"[data-scroll-to]\");\n        (null == i ? void 0 : i.length) && i.forEach(function(t) {\n            t.removeEventListener(\"click\", e._onScrollToBind, !1);\n        });\n    }, s._onResize = function() {\n        var t = this;\n        requestAnimationFrame(function() {\n            var e;\n            null == (e = t.coreInstance) || e.onResize({\n                currentScroll: t.lenisInstance.scroll\n            });\n        });\n    }, s._onRender = function() {\n        var t, e;\n        null == (t = this.lenisInstance) || t.raf(Date.now()), null == (e = this.coreInstance) || e.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.options.smoothWheel\n        });\n    }, s._onScrollTo = function(t) {\n        var e;\n        t.preventDefault();\n        var s = null != (e = t.currentTarget) ? e : null;\n        if (s) {\n            var i = s.getAttribute(\"data-scroll-to-href\") || s.getAttribute(\"href\"), r = s.getAttribute(\"data-scroll-to-offset\") || 0, n = s.getAttribute(\"data-scroll-to-duration\") || this.lenisInstance.options.duration;\n            i && this.scrollTo(i, {\n                offset: \"string\" == typeof r ? parseInt(r) : r,\n                duration: \"string\" == typeof n ? parseInt(n) : n\n            });\n        }\n    }, s.start = function() {\n        var t;\n        this.rafPlaying || (null == (t = this.lenisInstance) || t.start(), this.rafPlaying = !0, this.initCustomTicker ? this.initCustomTicker(this._onRenderBind) : this._raf());\n    }, s.stop = function() {\n        var t;\n        this.rafPlaying && (null == (t = this.lenisInstance) || t.stop(), this.rafPlaying = !1, this.destroyCustomTicker ? this.destroyCustomTicker(this._onRenderBind) : this.rafInstance && cancelAnimationFrame(this.rafInstance));\n    }, s.removeScrollElements = function(t) {\n        var e;\n        t ? (this._unbindScrollToEvents(t), null == (e = this.coreInstance) || e.removeScrollElements(t)) : console.error(\"Please provide a DOM Element as $oldContainer\");\n    }, s.addScrollElements = function(t) {\n        var e, s = this;\n        t ? (null == (e = this.coreInstance) || e.addScrollElements(t), requestAnimationFrame(function() {\n            s._bindScrollToEvents(t);\n        })) : console.error(\"Please provide a DOM Element as $newContainer\");\n    }, s.resize = function() {\n        this._onResizeBind();\n    }, s.scrollTo = function(t, e) {\n        var s;\n        null == (s = this.lenisInstance) || s.scrollTo(t, {\n            offset: null == e ? void 0 : e.offset,\n            lerp: null == e ? void 0 : e.lerp,\n            duration: null == e ? void 0 : e.duration,\n            immediate: null == e ? void 0 : e.immediate,\n            lock: null == e ? void 0 : e.lock,\n            force: null == e ? void 0 : e.force,\n            easing: null == e ? void 0 : e.easing,\n            onComplete: null == e ? void 0 : e.onComplete\n        });\n    }, s._raf = function() {\n        var t = this;\n        this._onRenderBind(), this.rafInstance = requestAnimationFrame(function() {\n            return t._raf();\n        });\n    }, e;\n}();\n\n\nconst $fac6dbf7ff6819fa$var$scroll = new (0, $44dff8ba698aec05$export$2e2bcd8739ae039)({\n    el: document.querySelector(\"[data-scroll-container]\"),\n    smooth: true,\n    multiplier: 2\n});\n\n\n//# sourceMappingURL=index.3b11fd0d.js.map\n","import LocomotiveScroll from \"locomotive-scroll\";\n\nconst scroll = new LocomotiveScroll({\n  el: document.querySelector(\"[data-scroll-container]\"),\n  smooth: true,\n  multiplier: 2,\n});\n","import t from\"lenis\";function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var s=0,i=Array(e);s<e;s++)i[s]=t[s];return i}function s(t,s){var i=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(i)return(i=i.call(t)).next.bind(i);if(Array.isArray(t)||(i=function(t,s){if(t){if(\"string\"==typeof t)return e(t,s);var i={}.toString.call(t).slice(8,-1);return\"Object\"===i&&t.constructor&&(i=t.constructor.name),\"Map\"===i||\"Set\"===i?Array.from(t):\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(t,s):void 0}}(t))||s&&t&&\"number\"==typeof t.length){i&&(t=i);var r=0;return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function i(){return i=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var i in s)({}).hasOwnProperty.call(s,i)&&(t[i]=s[i])}return t},i.apply(null,arguments)}var r=/*#__PURE__*/function(){function t(t){var e=t.scrollElements,s=t.rootMargin,i=void 0===s?\"-1px -1px -1px -1px\":s,r=t.IORaf;this.scrollElements=void 0,this.rootMargin=void 0,this.IORaf=void 0,this.observer=void 0,this.scrollElements=e,this.rootMargin=i,this.IORaf=r,this._init()}var e=t.prototype;return e._init=function(){var t=this;this.observer=new IntersectionObserver(function(e){e.forEach(function(e){var s=t.scrollElements.find(function(t){return t.$el===e.target});e.isIntersecting?(s&&(s.isAlreadyIntersected=!0),t._setInview(e)):s&&s.isAlreadyIntersected&&t._setOutOfView(e)})},{rootMargin:this.rootMargin});for(var e,i=s(this.scrollElements);!(e=i()).done;)this.observe(e.value.$el)},e.destroy=function(){this.observer.disconnect()},e.observe=function(t){t&&this.observer.observe(t)},e.unobserve=function(t){t&&this.observer.unobserve(t)},e._setInview=function(t){var e=this.scrollElements.find(function(e){return e.$el===t.target});this.IORaf&&(null==e||e.setInteractivityOn()),!this.IORaf&&(null==e||e.setInview())},e._setOutOfView=function(t){var e=this.scrollElements.find(function(e){return e.$el===t.target});this.IORaf&&(null==e||e.setInteractivityOff()),!this.IORaf&&(null==e||e.setOutOfView()),null!=e&&e.attributes.scrollRepeat||this.IORaf||this.unobserve(t.target)},t}();function n(t,e,s,i,r){return s+((r-t)/(e-t)*(i-s)||0)}function o(t,e){return t.reduce(function(t,s){return Math.abs(s-e)<Math.abs(t-e)?s:t})}var l=/*#__PURE__*/function(){function t(t){var e,s,i,r,n,o=t.$el,l=t.id,a=t.modularInstance,c=t.subscribeElementUpdateFn,h=t.unsubscribeElementUpdateFn,u=t.needRaf,d=t.scrollOrientation;this.$el=void 0,this.id=void 0,this.needRaf=void 0,this.attributes=void 0,this.scrollOrientation=void 0,this.isAlreadyIntersected=void 0,this.intersection=void 0,this.metrics=void 0,this.currentScroll=void 0,this.translateValue=void 0,this.progress=void 0,this.lastProgress=void 0,this.modularInstance=void 0,this.progressModularModules=void 0,this.isInview=void 0,this.isInteractive=void 0,this.isInFold=void 0,this.isFirstResize=void 0,this.subscribeElementUpdateFn=void 0,this.unsubscribeElementUpdateFn=void 0,this.$el=o,this.id=l,this.needRaf=u,this.scrollOrientation=d,this.modularInstance=a,this.subscribeElementUpdateFn=c,this.unsubscribeElementUpdateFn=h,this.attributes={scrollClass:null!=(e=this.$el.dataset.scrollClass)?e:\"is-inview\",scrollOffset:null!=(s=this.$el.dataset.scrollOffset)?s:\"0,0\",scrollPosition:null!=(i=this.$el.dataset.scrollPosition)?i:\"start,end\",scrollModuleProgress:null!=this.$el.dataset.scrollModuleProgress,scrollCssProgress:null!=this.$el.dataset.scrollCssProgress,scrollEventProgress:null!=(r=this.$el.dataset.scrollEventProgress)?r:null,scrollSpeed:null!=this.$el.dataset.scrollSpeed?parseFloat(this.$el.dataset.scrollSpeed):null,scrollRepeat:null!=this.$el.dataset.scrollRepeat,scrollCall:null!=(n=this.$el.dataset.scrollCall)?n:null,scrollCallSelf:null!=this.$el.dataset.scrollCallSelf,scrollIgnoreFold:null!=this.$el.dataset.scrollIgnoreFold,scrollEnableTouchSpeed:null!=this.$el.dataset.scrollEnableTouchSpeed},this.intersection={start:0,end:0},this.metrics={offsetStart:0,offsetEnd:0,bcr:{}},this.currentScroll=\"vertical\"===this.scrollOrientation?window.scrollY:window.scrollX,this.translateValue=0,this.progress=0,this.lastProgress=null,this.progressModularModules=[],this.isInview=!1,this.isInteractive=!1,this.isAlreadyIntersected=!1,this.isInFold=!1,this.isFirstResize=!0,this._init()}var e=t.prototype;return e._init=function(){this.needRaf&&(this.modularInstance&&this.attributes.scrollModuleProgress&&this._getProgressModularModules(),this._resize())},e.onResize=function(t){this.currentScroll=t.currentScroll,this._resize()},e.onRender=function(t){var e=t.smooth,s=\"vertical\"===this.scrollOrientation?window.innerHeight:window.innerWidth;if(this.currentScroll=t.currentScroll,this._computeProgress(),this.attributes.scrollSpeed&&!isNaN(this.attributes.scrollSpeed))if(this.attributes.scrollEnableTouchSpeed||e){if(this.isInFold){var i=Math.max(0,this.progress);this.translateValue=i*s*this.attributes.scrollSpeed*-1}else{var r=n(0,1,-1,1,this.progress);this.translateValue=r*s*this.attributes.scrollSpeed*-1}this.$el.style.transform=\"vertical\"===this.scrollOrientation?\"translate3d(0, \"+this.translateValue+\"px, 0)\":\"translate3d(\"+this.translateValue+\"px, 0, 0)\"}else this.translateValue&&(this.$el.style.transform=\"translate3d(0, 0, 0)\"),this.translateValue=0},e.setInview=function(){if(!this.isInview){this.isInview=!0,this.$el.classList.add(this.attributes.scrollClass);var t=this._getScrollCallFrom();this.attributes.scrollCall&&this._dispatchCall(\"enter\",t)}},e.setOutOfView=function(){if(this.isInview&&this.attributes.scrollRepeat){this.isInview=!1,this.$el.classList.remove(this.attributes.scrollClass);var t=this._getScrollCallFrom();this.attributes.scrollCall&&this._dispatchCall(\"leave\",t)}},e.setInteractivityOn=function(){this.isInteractive||(this.isInteractive=!0,this.subscribeElementUpdateFn(this))},e.setInteractivityOff=function(){this.isInteractive&&(this.isInteractive=!1,this.unsubscribeElementUpdateFn(this),null!=this.lastProgress&&this._computeProgress(o([0,1],this.lastProgress)))},e._resize=function(){this.metrics.bcr=this.$el.getBoundingClientRect(),this._computeMetrics(),this._computeIntersection(),this.isFirstResize&&(this.isFirstResize=!1,this.isInFold&&this.setInview())},e._computeMetrics=function(){var t=this.metrics.bcr,e=\"vertical\"===this.scrollOrientation?window.innerHeight:window.innerWidth,s=\"vertical\"===this.scrollOrientation?t.height:t.width;this.metrics.offsetStart=this.currentScroll+(\"vertical\"===this.scrollOrientation?t.top:t.left)-this.translateValue,this.metrics.offsetEnd=this.metrics.offsetStart+s,this.isInFold=this.metrics.offsetStart<e&&!this.attributes.scrollIgnoreFold},e._computeIntersection=function(){var t=\"vertical\"===this.scrollOrientation?window.innerHeight:window.innerWidth,e=\"vertical\"===this.scrollOrientation?this.metrics.bcr.height:this.metrics.bcr.width,s=this.attributes.scrollOffset.split(\",\"),i=null!=s[0]?s[0].trim():\"0\",r=null!=s[1]?s[1].trim():\"0\",n=this.attributes.scrollPosition.split(\",\"),o=null!=n[0]?n[0].trim():\"start\",l=null!=n[1]?n[1].trim():\"end\",a=i.includes(\"%\")?t*parseInt(i.replace(\"%\",\"\").trim())*.01:parseInt(i),c=r.includes(\"%\")?t*parseInt(r.replace(\"%\",\"\").trim())*.01:parseInt(r);switch(this.isInFold&&(o=\"fold\"),o){case\"start\":default:this.intersection.start=this.metrics.offsetStart-t+a;break;case\"middle\":this.intersection.start=this.metrics.offsetStart-t+a+.5*e;break;case\"end\":this.intersection.start=this.metrics.offsetStart-t+a+e;break;case\"fold\":this.intersection.start=0}switch(l){case\"start\":this.intersection.end=this.metrics.offsetStart-c;break;case\"middle\":this.intersection.end=this.metrics.offsetStart-c+.5*e;break;default:this.intersection.end=this.metrics.offsetStart-c+e}if(this.intersection.end<=this.intersection.start)switch(l){case\"start\":default:this.intersection.end=this.intersection.start+1;break;case\"middle\":this.intersection.end=this.intersection.start+.5*e;break;case\"end\":this.intersection.end=this.intersection.start+e}},e._computeProgress=function(t){var e,i=null!=t?t:(e=n(this.intersection.start,this.intersection.end,0,1,this.currentScroll))<0?0:e>1?1:e;if(this.progress=i,i!=this.lastProgress){if(this.lastProgress=i,this.attributes.scrollCssProgress&&this._setCssProgress(i),this.attributes.scrollEventProgress&&this._setCustomEventProgress(i),this.attributes.scrollModuleProgress)for(var r,o=s(this.progressModularModules);!(r=o()).done;){var l=r.value;this.modularInstance&&this.modularInstance.call(\"onScrollProgress\",i,l.moduleName,l.moduleId)}i>0&&i<1&&this.setInview(),0===i&&this.setOutOfView(),1===i&&this.setOutOfView()}},e._setCssProgress=function(t){void 0===t&&(t=0),this.$el.style.setProperty(\"--progress\",t.toString())},e._setCustomEventProgress=function(t){void 0===t&&(t=0);var e=this.attributes.scrollEventProgress;if(e){var s=new CustomEvent(e,{detail:{target:this.$el,progress:t}});window.dispatchEvent(s)}},e._getProgressModularModules=function(){if(this.modularInstance){var t=Object.keys(this.$el.dataset).filter(function(t){return t.includes(\"module\")}),e=Object.entries(this.modularInstance.modules);if(t.length)for(var i,r=s(t);!(i=r()).done;){var n=this.$el.dataset[i.value];if(!n)return;for(var o,l=s(e);!(o=l()).done;){var a=o.value;n in a[1]&&this.progressModularModules.push({moduleName:a[0],moduleId:n})}}}},e._getScrollCallFrom=function(){var t=o([this.intersection.start,this.intersection.end],this.currentScroll);return this.intersection.start===t?\"start\":\"end\"},e._dispatchCall=function(t,e){var s,i,r=null==(s=this.attributes.scrollCall)?void 0:s.split(\",\"),n=null==(i=this.attributes)?void 0:i.scrollCallSelf;if(r&&r.length>1){var o,l,a=r[0],c=r[1],h=r[2];l=n?this.$el.dataset[\"module\"+c.trim()]:h,this.modularInstance&&this.modularInstance.call(a.trim(),{target:this.$el,way:t,from:e},c.trim(),null==(o=l)?void 0:o.trim())}else if(r){var u=new CustomEvent(r[0],{detail:{target:this.$el,way:t,from:e}});window.dispatchEvent(u)}},t}(),a=[\"scrollOffset\",\"scrollPosition\",\"scrollModuleProgress\",\"scrollCssProgress\",\"scrollEventProgress\",\"scrollSpeed\"],c=/*#__PURE__*/function(){function t(t){var e=t.$el,s=t.modularInstance,i=t.triggerRootMargin,r=t.rafRootMargin,n=t.scrollOrientation;this.$scrollContainer=void 0,this.modularInstance=void 0,this.triggerRootMargin=void 0,this.rafRootMargin=void 0,this.scrollElements=void 0,this.triggeredScrollElements=void 0,this.RAFScrollElements=void 0,this.scrollElementsToUpdate=void 0,this.IOTriggerInstance=void 0,this.IORafInstance=void 0,this.scrollOrientation=void 0,e?(this.$scrollContainer=e,this.modularInstance=s,this.scrollOrientation=n,this.triggerRootMargin=null!=i?i:\"-1px -1px -1px -1px\",this.rafRootMargin=null!=r?r:\"100% 100% 100% 100%\",this.scrollElements=[],this.triggeredScrollElements=[],this.RAFScrollElements=[],this.scrollElementsToUpdate=[],this._init()):console.error(\"Please provide a DOM Element as scrollContainer\")}var e=t.prototype;return e._init=function(){var t=this.$scrollContainer.querySelectorAll(\"[data-scroll]\"),e=Array.from(t);this._subscribeScrollElements(e),this.IOTriggerInstance=new r({scrollElements:[].concat(this.triggeredScrollElements),rootMargin:this.triggerRootMargin,IORaf:!1}),this.IORafInstance=new r({scrollElements:[].concat(this.RAFScrollElements),rootMargin:this.rafRootMargin,IORaf:!0})},e.destroy=function(){this.IOTriggerInstance.destroy(),this.IORafInstance.destroy(),this._unsubscribeAllScrollElements()},e.onResize=function(t){for(var e,i=t.currentScroll,r=s(this.RAFScrollElements);!(e=r()).done;)e.value.onResize({currentScroll:i})},e.onRender=function(t){for(var e,i=t.currentScroll,r=t.smooth,n=s(this.scrollElementsToUpdate);!(e=n()).done;)e.value.onRender({currentScroll:i,smooth:r})},e.removeScrollElements=function(t){var e=this,s=t.querySelectorAll(\"[data-scroll]\");if(s.length){for(var i=0;i<this.triggeredScrollElements.length;i++){var r=this.triggeredScrollElements[i];Array.from(s).indexOf(r.$el)>-1&&(this.IOTriggerInstance.unobserve(r.$el),this.triggeredScrollElements.splice(i,1))}for(var n=0;n<this.RAFScrollElements.length;n++){var o=this.RAFScrollElements[n];Array.from(s).indexOf(o.$el)>-1&&(this.IORafInstance.unobserve(o.$el),this.RAFScrollElements.splice(n,1))}s.forEach(function(t){var s=e.scrollElementsToUpdate.find(function(e){return e.$el===t}),i=e.scrollElements.find(function(e){return e.$el===t});s&&e._unsubscribeElementUpdate(s),i&&(e.scrollElements=e.scrollElements.filter(function(t){return t.id!=i.id}))})}},e.addScrollElements=function(t){var e=t.querySelectorAll(\"[data-scroll]\"),s=[];this.scrollElements.forEach(function(t){s.push(t.id)});var i=Math.max.apply(Math,s.concat([0]))+1,r=Array.from(e);this._subscribeScrollElements(r,i,!0)},e._subscribeScrollElements=function(t,e,s){void 0===e&&(e=0),void 0===s&&(s=!1);for(var i=0;i<t.length;i++){var r=t[i],n=this._checkRafNeeded(r),o=new l({$el:r,id:e+i,scrollOrientation:this.scrollOrientation,modularInstance:this.modularInstance,subscribeElementUpdateFn:this._subscribeElementUpdate.bind(this),unsubscribeElementUpdateFn:this._unsubscribeElementUpdate.bind(this),needRaf:n});this.scrollElements.push(o),n?(this.RAFScrollElements.push(o),s&&(this.IORafInstance.scrollElements.push(o),this.IORafInstance.observe(o.$el))):(this.triggeredScrollElements.push(o),s&&(this.IOTriggerInstance.scrollElements.push(o),this.IOTriggerInstance.observe(o.$el)))}},e._unsubscribeAllScrollElements=function(){this.scrollElements=[],this.RAFScrollElements=[],this.triggeredScrollElements=[],this.scrollElementsToUpdate=[]},e._subscribeElementUpdate=function(t){this.scrollElementsToUpdate.push(t)},e._unsubscribeElementUpdate=function(t){this.scrollElementsToUpdate=this.scrollElementsToUpdate.filter(function(e){return e.id!=t.id})},e._checkRafNeeded=function(t){var e=[].concat(a),i=function(t){e=e.filter(function(e){return e!=t})};if(t.dataset.scrollOffset){if(\"0,0\"!=t.dataset.scrollOffset.split(\",\").map(function(t){return t.replace(\"%\",\"\").trim()}).join(\",\"))return!0;i(\"scrollOffset\")}else i(\"scrollOffset\");if(t.dataset.scrollPosition){if(\"top,bottom\"!=t.dataset.scrollPosition.trim())return!0;i(\"scrollPosition\")}else i(\"scrollPosition\");if(t.dataset.scrollSpeed&&!isNaN(parseFloat(t.dataset.scrollSpeed)))return!0;i(\"scrollSpeed\");for(var r,n=s(e);!(r=n()).done;)if(r.value in t.dataset)return!0;return!1},t}(),h=/*#__PURE__*/function(){function t(t){var e=t.resizeElements,s=t.resizeCallback,i=void 0===s?function(){}:s;this.$resizeElements=void 0,this.isFirstObserve=void 0,this.observer=void 0,this.resizeCallback=void 0,this.$resizeElements=e,this.resizeCallback=i,this.isFirstObserve=!0,this._init()}var e=t.prototype;return e._init=function(){var t=this;this.observer=new ResizeObserver(function(e){!t.isFirstObserve&&(null==t.resizeCallback||t.resizeCallback()),t.isFirstObserve=!1});for(var e,i=s(this.$resizeElements);!(e=i()).done;)this.observer.observe(e.value)},e.destroy=function(){this.observer.disconnect()},t}(),u=/*#__PURE__*/function(){function e(t){var e=void 0===t?{}:t,s=e.lenisOptions,i=void 0===s?{}:s,r=e.modularInstance,n=e.triggerRootMargin,o=e.rafRootMargin,l=e.autoResize,a=void 0===l||l,c=e.autoStart,h=void 0===c||c,u=e.scrollCallback,d=void 0===u?function(){}:u,f=e.initCustomTicker,v=e.destroyCustomTicker;this.rafPlaying=void 0,this.lenisInstance=void 0,this.coreInstance=void 0,this.lenisOptions=void 0,this.modularInstance=void 0,this.triggerRootMargin=void 0,this.rafRootMargin=void 0,this.rafInstance=void 0,this.autoResize=void 0,this.autoStart=void 0,this.ROInstance=void 0,this.initCustomTicker=void 0,this.destroyCustomTicker=void 0,this._onRenderBind=void 0,this._onResizeBind=void 0,this._onScrollToBind=void 0;for(var m=0,g=Object.entries(i);m<g.length;m++){var b=g[m][0];[\"wrapper\",\"content\",\"infinite\"].includes(b)&&console.warn('Warning: Key \"'+b+'\" is not possible to edit in Locomotive Scroll.')}Object.assign(this,{lenisOptions:i,modularInstance:r,triggerRootMargin:n,rafRootMargin:o,autoResize:a,autoStart:h,scrollCallback:d,initCustomTicker:f,destroyCustomTicker:v}),this._onRenderBind=this._onRender.bind(this),this._onScrollToBind=this._onScrollTo.bind(this),this._onResizeBind=this._onResize.bind(this),this.rafPlaying=!1,this._init()}var s=e.prototype;return s._init=function(){var e,s=this;this.lenisInstance=new t(i({},this.lenisOptions,{wrapper:window,content:document.documentElement,infinite:!1})),null==(e=this.lenisInstance)||e.on(\"scroll\",this.scrollCallback),document.documentElement.setAttribute(\"data-scroll-orientation\",this.lenisInstance.options.orientation),requestAnimationFrame(function(){s.coreInstance=new c({$el:s.lenisInstance.rootElement,modularInstance:s.modularInstance,triggerRootMargin:s.triggerRootMargin,rafRootMargin:s.rafRootMargin,scrollOrientation:s.lenisInstance.options.orientation}),s._bindEvents(),s.initCustomTicker&&!s.destroyCustomTicker?console.warn(\"initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.\"):!s.initCustomTicker&&s.destroyCustomTicker&&console.warn(\"destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.\"),s.autoStart&&s.start()})},s.destroy=function(){var t,e=this;this.stop(),this._unbindEvents(),this.lenisInstance.destroy(),null==(t=this.coreInstance)||t.destroy(),requestAnimationFrame(function(){var t;null==(t=e.coreInstance)||t.destroy()})},s._bindEvents=function(){this._bindScrollToEvents(),this.autoResize&&(\"ResizeObserver\"in window?this.ROInstance=new h({resizeElements:[document.body],resizeCallback:this._onResizeBind}):window.addEventListener(\"resize\",this._onResizeBind))},s._unbindEvents=function(){this._unbindScrollToEvents(),this.autoResize&&(\"ResizeObserver\"in window?this.ROInstance&&this.ROInstance.destroy():window.removeEventListener(\"resize\",this._onResizeBind))},s._bindScrollToEvents=function(t){var e=this,s=t||this.lenisInstance.rootElement,i=null==s?void 0:s.querySelectorAll(\"[data-scroll-to]\");(null==i?void 0:i.length)&&i.forEach(function(t){t.addEventListener(\"click\",e._onScrollToBind,!1)})},s._unbindScrollToEvents=function(t){var e=this,s=t||this.lenisInstance.rootElement,i=null==s?void 0:s.querySelectorAll(\"[data-scroll-to]\");(null==i?void 0:i.length)&&i.forEach(function(t){t.removeEventListener(\"click\",e._onScrollToBind,!1)})},s._onResize=function(){var t=this;requestAnimationFrame(function(){var e;null==(e=t.coreInstance)||e.onResize({currentScroll:t.lenisInstance.scroll})})},s._onRender=function(){var t,e;null==(t=this.lenisInstance)||t.raf(Date.now()),null==(e=this.coreInstance)||e.onRender({currentScroll:this.lenisInstance.scroll,smooth:this.lenisInstance.options.smoothWheel})},s._onScrollTo=function(t){var e;t.preventDefault();var s=null!=(e=t.currentTarget)?e:null;if(s){var i=s.getAttribute(\"data-scroll-to-href\")||s.getAttribute(\"href\"),r=s.getAttribute(\"data-scroll-to-offset\")||0,n=s.getAttribute(\"data-scroll-to-duration\")||this.lenisInstance.options.duration;i&&this.scrollTo(i,{offset:\"string\"==typeof r?parseInt(r):r,duration:\"string\"==typeof n?parseInt(n):n})}},s.start=function(){var t;this.rafPlaying||(null==(t=this.lenisInstance)||t.start(),this.rafPlaying=!0,this.initCustomTicker?this.initCustomTicker(this._onRenderBind):this._raf())},s.stop=function(){var t;this.rafPlaying&&(null==(t=this.lenisInstance)||t.stop(),this.rafPlaying=!1,this.destroyCustomTicker?this.destroyCustomTicker(this._onRenderBind):this.rafInstance&&cancelAnimationFrame(this.rafInstance))},s.removeScrollElements=function(t){var e;t?(this._unbindScrollToEvents(t),null==(e=this.coreInstance)||e.removeScrollElements(t)):console.error(\"Please provide a DOM Element as $oldContainer\")},s.addScrollElements=function(t){var e,s=this;t?(null==(e=this.coreInstance)||e.addScrollElements(t),requestAnimationFrame(function(){s._bindScrollToEvents(t)})):console.error(\"Please provide a DOM Element as $newContainer\")},s.resize=function(){this._onResizeBind()},s.scrollTo=function(t,e){var s;null==(s=this.lenisInstance)||s.scrollTo(t,{offset:null==e?void 0:e.offset,lerp:null==e?void 0:e.lerp,duration:null==e?void 0:e.duration,immediate:null==e?void 0:e.immediate,lock:null==e?void 0:e.lock,force:null==e?void 0:e.force,easing:null==e?void 0:e.easing,onComplete:null==e?void 0:e.onComplete})},s._raf=function(){var t=this;this._onRenderBind(),this.rafInstance=requestAnimationFrame(function(){return t._raf()})},e}();export{u as default};\n//# sourceMappingURL=locomotive-scroll.mjs.map\n","/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport type { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n","// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n","/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport type {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n","/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport type {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids, 0);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport type { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n","//@ts-ignore\nimport Lenis from 'lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport type {\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\nimport type { LenisOptions } from 'lenis';\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/darkroomengineering/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n    public lenisInstance: any;\n\n    private coreInstance: any;\n\n    private lenisOptions?: LenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n\n        for (const [key] of Object.entries(lenisOptions)) {\n            if ([\"wrapper\", \"content\", \"infinite\"].includes(key)) {\n                console.warn(`Warning: Key \"${key}\" is not possible to edit in Locomotive Scroll.`);\n            }\n        }\n\n        // Get arguments\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            ...this.lenisOptions,\n            wrapper: window,\n            content: document.documentElement,\n            infinite: false\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance?.destroy();\n\n        // Ensure a delay before destroying to handle cases of instant destruction\n        requestAnimationFrame(() => {\n            this.coreInstance?.destroy();\n        });\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.options.smoothWheel,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisInstance.options.duration\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis start method\n        this.lenisInstance?.start();\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis stop method\n        this.lenisInstance?.stop();\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n\nexport * from './types';\n","function clamp(t,i,e){return Math.max(t,Math.min(i,e))}class Animate{constructor(){this.isRunning=!1,this.value=0,this.from=0,this.to=0,this.duration=0,this.currentTime=0}advance(t){var i;if(!this.isRunning)return;let e=!1;if(this.duration&&this.easing){this.currentTime+=t;const i=clamp(0,this.currentTime/this.duration,1);e=i>=1;const s=e?1:this.easing(i);this.value=this.from+(this.to-this.from)*s}else this.lerp?(this.value=function damp(t,i,e,s){return function lerp(t,i,e){return(1-e)*t+e*i}(t,i,1-Math.exp(-e*s))}(this.value,this.to,60*this.lerp,t),Math.round(this.value)===this.to&&(this.value=this.to,e=!0)):(this.value=this.to,e=!0);e&&this.stop(),null===(i=this.onUpdate)||void 0===i||i.call(this,this.value,e)}stop(){this.isRunning=!1}fromTo(t,i,{lerp:e,duration:s,easing:o,onStart:n,onUpdate:l}){this.from=this.value=t,this.to=i,this.lerp=e,this.duration=s,this.easing=o,this.currentTime=0,this.isRunning=!0,null==n||n(),this.onUpdate=l}}class Dimensions{constructor({wrapper:t,content:i,autoResize:e=!0,debounce:s=250}={}){this.width=0,this.height=0,this.scrollWidth=0,this.scrollHeight=0,this.resize=()=>{this.onWrapperResize(),this.onContentResize()},this.onWrapperResize=()=>{this.wrapper===window?(this.width=window.innerWidth,this.height=window.innerHeight):this.wrapper instanceof HTMLElement&&(this.width=this.wrapper.clientWidth,this.height=this.wrapper.clientHeight)},this.onContentResize=()=>{this.wrapper===window?(this.scrollHeight=this.content.scrollHeight,this.scrollWidth=this.content.scrollWidth):this.wrapper instanceof HTMLElement&&(this.scrollHeight=this.wrapper.scrollHeight,this.scrollWidth=this.wrapper.scrollWidth)},this.wrapper=t,this.content=i,e&&(this.debouncedResize=function debounce(t,i){let e;return function(){let s=arguments,o=this;clearTimeout(e),e=setTimeout((function(){t.apply(o,s)}),i)}}(this.resize,s),this.wrapper===window?window.addEventListener(\"resize\",this.debouncedResize,!1):(this.wrapperResizeObserver=new ResizeObserver(this.debouncedResize),this.wrapperResizeObserver.observe(this.wrapper)),this.contentResizeObserver=new ResizeObserver(this.debouncedResize),this.contentResizeObserver.observe(this.content)),this.resize()}destroy(){var t,i;null===(t=this.wrapperResizeObserver)||void 0===t||t.disconnect(),null===(i=this.contentResizeObserver)||void 0===i||i.disconnect(),window.removeEventListener(\"resize\",this.debouncedResize,!1)}get limit(){return{x:this.scrollWidth-this.width,y:this.scrollHeight-this.height}}}class Emitter{constructor(){this.events={}}emit(t,...i){let e=this.events[t]||[];for(let t=0,s=e.length;t<s;t++)e[t](...i)}on(t,i){var e;return(null===(e=this.events[t])||void 0===e?void 0:e.push(i))||(this.events[t]=[i]),()=>{var e;this.events[t]=null===(e=this.events[t])||void 0===e?void 0:e.filter((t=>i!==t))}}off(t,i){var e;this.events[t]=null===(e=this.events[t])||void 0===e?void 0:e.filter((t=>i!==t))}destroy(){this.events={}}}const t=100/6;class VirtualScroll{constructor(i,{wheelMultiplier:e=1,touchMultiplier:s=1}){this.lastDelta={x:0,y:0},this.windowWidth=0,this.windowHeight=0,this.onTouchStart=t=>{const{clientX:i,clientY:e}=t.targetTouches?t.targetTouches[0]:t;this.touchStart.x=i,this.touchStart.y=e,this.lastDelta={x:0,y:0},this.emitter.emit(\"scroll\",{deltaX:0,deltaY:0,event:t})},this.onTouchMove=t=>{var i,e,s,o;const{clientX:n,clientY:l}=t.targetTouches?t.targetTouches[0]:t,r=-(n-(null!==(e=null===(i=this.touchStart)||void 0===i?void 0:i.x)&&void 0!==e?e:0))*this.touchMultiplier,h=-(l-(null!==(o=null===(s=this.touchStart)||void 0===s?void 0:s.y)&&void 0!==o?o:0))*this.touchMultiplier;this.touchStart.x=n,this.touchStart.y=l,this.lastDelta={x:r,y:h},this.emitter.emit(\"scroll\",{deltaX:r,deltaY:h,event:t})},this.onTouchEnd=t=>{this.emitter.emit(\"scroll\",{deltaX:this.lastDelta.x,deltaY:this.lastDelta.y,event:t})},this.onWheel=i=>{let{deltaX:e,deltaY:s,deltaMode:o}=i;e*=1===o?t:2===o?this.windowWidth:1,s*=1===o?t:2===o?this.windowHeight:1,e*=this.wheelMultiplier,s*=this.wheelMultiplier,this.emitter.emit(\"scroll\",{deltaX:e,deltaY:s,event:i})},this.onWindowResize=()=>{this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight},this.element=i,this.wheelMultiplier=e,this.touchMultiplier=s,this.touchStart={x:null,y:null},this.emitter=new Emitter,window.addEventListener(\"resize\",this.onWindowResize,!1),this.onWindowResize(),this.element.addEventListener(\"wheel\",this.onWheel,{passive:!1}),this.element.addEventListener(\"touchstart\",this.onTouchStart,{passive:!1}),this.element.addEventListener(\"touchmove\",this.onTouchMove,{passive:!1}),this.element.addEventListener(\"touchend\",this.onTouchEnd,{passive:!1})}on(t,i){return this.emitter.on(t,i)}destroy(){this.emitter.destroy(),window.removeEventListener(\"resize\",this.onWindowResize,!1),this.element.removeEventListener(\"wheel\",this.onWheel),this.element.removeEventListener(\"touchstart\",this.onTouchStart),this.element.removeEventListener(\"touchmove\",this.onTouchMove),this.element.removeEventListener(\"touchend\",this.onTouchEnd)}}class Lenis{constructor({wrapper:t=window,content:i=document.documentElement,wheelEventsTarget:e=t,eventsTarget:s=e,smoothWheel:o=!0,syncTouch:n=!1,syncTouchLerp:l=.075,touchInertiaMultiplier:r=35,duration:h,easing:a=(t=>Math.min(1,1.001-Math.pow(2,-10*t))),lerp:c=.1,infinite:d=!1,orientation:u=\"vertical\",gestureOrientation:p=\"vertical\",touchMultiplier:m=1,wheelMultiplier:v=1,autoResize:g=!0,prevent:w,virtualScroll:S,__experimental__naiveDimensions:f=!1}={}){this.__isScrolling=!1,this.__isStopped=!1,this.__isLocked=!1,this.userData={},this.lastVelocity=0,this.velocity=0,this.direction=0,this.onPointerDown=t=>{1===t.button&&this.reset()},this.onVirtualScroll=t=>{if(\"function\"==typeof this.options.virtualScroll&&!1===this.options.virtualScroll(t))return;const{deltaX:i,deltaY:e,event:s}=t;if(this.emitter.emit(\"virtual-scroll\",{deltaX:i,deltaY:e,event:s}),s.ctrlKey)return;const o=s.type.includes(\"touch\"),n=s.type.includes(\"wheel\");this.isTouching=\"touchstart\"===s.type||\"touchmove\"===s.type;if(this.options.syncTouch&&o&&\"touchstart\"===s.type&&!this.isStopped&&!this.isLocked)return void this.reset();const l=0===i&&0===e,r=\"vertical\"===this.options.gestureOrientation&&0===e||\"horizontal\"===this.options.gestureOrientation&&0===i;if(l||r)return;let h=s.composedPath();h=h.slice(0,h.indexOf(this.rootElement));const a=this.options.prevent;if(h.find((t=>{var i,e,s,l,r;return t instanceof Element&&(\"function\"==typeof a&&(null==a?void 0:a(t))||(null===(i=t.hasAttribute)||void 0===i?void 0:i.call(t,\"data-lenis-prevent\"))||o&&(null===(e=t.hasAttribute)||void 0===e?void 0:e.call(t,\"data-lenis-prevent-touch\"))||n&&(null===(s=t.hasAttribute)||void 0===s?void 0:s.call(t,\"data-lenis-prevent-wheel\"))||(null===(l=t.classList)||void 0===l?void 0:l.contains(\"lenis\"))&&!(null===(r=t.classList)||void 0===r?void 0:r.contains(\"lenis-stopped\")))})))return;if(this.isStopped||this.isLocked)return void s.preventDefault();if(!(this.options.syncTouch&&o||this.options.smoothWheel&&n))return this.isScrolling=\"native\",void this.animate.stop();s.preventDefault();let c=e;\"both\"===this.options.gestureOrientation?c=Math.abs(e)>Math.abs(i)?e:i:\"horizontal\"===this.options.gestureOrientation&&(c=i);const d=o&&this.options.syncTouch,u=o&&\"touchend\"===s.type&&Math.abs(c)>5;u&&(c=this.velocity*this.options.touchInertiaMultiplier),this.scrollTo(this.targetScroll+c,Object.assign({programmatic:!1},d?{lerp:u?this.options.syncTouchLerp:1}:{lerp:this.options.lerp,duration:this.options.duration,easing:this.options.easing}))},this.onNativeScroll=()=>{if(clearTimeout(this.__resetVelocityTimeout),delete this.__resetVelocityTimeout,this.__preventNextNativeScrollEvent)delete this.__preventNextNativeScrollEvent;else if(!1===this.isScrolling||\"native\"===this.isScrolling){const t=this.animatedScroll;this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity,this.velocity=this.animatedScroll-t,this.direction=Math.sign(this.animatedScroll-t),this.isScrolling=\"native\",this.emit(),0!==this.velocity&&(this.__resetVelocityTimeout=setTimeout((()=>{this.lastVelocity=this.velocity,this.velocity=0,this.isScrolling=!1,this.emit()}),400))}},window.lenisVersion=\"1.1.9\",t&&t!==document.documentElement&&t!==document.body||(t=window),this.options={wrapper:t,content:i,wheelEventsTarget:e,eventsTarget:s,smoothWheel:o,syncTouch:n,syncTouchLerp:l,touchInertiaMultiplier:r,duration:h,easing:a,lerp:c,infinite:d,gestureOrientation:p,orientation:u,touchMultiplier:m,wheelMultiplier:v,autoResize:g,prevent:w,virtualScroll:S,__experimental__naiveDimensions:f},this.animate=new Animate,this.emitter=new Emitter,this.dimensions=new Dimensions({wrapper:t,content:i,autoResize:g}),this.updateClassName(),this.userData={},this.time=0,this.velocity=this.lastVelocity=0,this.isLocked=!1,this.isStopped=!1,this.isScrolling=!1,this.targetScroll=this.animatedScroll=this.actualScroll,this.options.wrapper.addEventListener(\"scroll\",this.onNativeScroll,!1),this.options.wrapper.addEventListener(\"pointerdown\",this.onPointerDown,!1),this.virtualScroll=new VirtualScroll(s,{touchMultiplier:m,wheelMultiplier:v}),this.virtualScroll.on(\"scroll\",this.onVirtualScroll)}destroy(){this.emitter.destroy(),this.options.wrapper.removeEventListener(\"scroll\",this.onNativeScroll,!1),this.options.wrapper.removeEventListener(\"pointerdown\",this.onPointerDown,!1),this.virtualScroll.destroy(),this.dimensions.destroy(),this.cleanUpClassName()}on(t,i){return this.emitter.on(t,i)}off(t,i){return this.emitter.off(t,i)}setScroll(t){this.isHorizontal?this.rootElement.scrollLeft=t:this.rootElement.scrollTop=t}resize(){this.dimensions.resize()}emit(){this.emitter.emit(\"scroll\",this)}reset(){this.isLocked=!1,this.isScrolling=!1,this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity=0,this.animate.stop()}start(){this.isStopped&&(this.isStopped=!1,this.reset())}stop(){this.isStopped||(this.isStopped=!0,this.animate.stop(),this.reset())}raf(t){const i=t-(this.time||t);this.time=t,this.animate.advance(.001*i)}scrollTo(t,{offset:i=0,immediate:e=!1,lock:s=!1,duration:o=this.options.duration,easing:n=this.options.easing,lerp:l=this.options.lerp,onStart:r,onComplete:h,force:a=!1,programmatic:c=!0,userData:d={}}={}){if(!this.isStopped&&!this.isLocked||a){if(\"string\"==typeof t&&[\"top\",\"left\",\"start\"].includes(t))t=0;else if(\"string\"==typeof t&&[\"bottom\",\"right\",\"end\"].includes(t))t=this.limit;else{let e;if(\"string\"==typeof t?e=document.querySelector(t):t instanceof HTMLElement&&(null==t?void 0:t.nodeType)&&(e=t),e){if(this.options.wrapper!==window){const t=this.rootElement.getBoundingClientRect();i-=this.isHorizontal?t.left:t.top}const s=e.getBoundingClientRect();t=(this.isHorizontal?s.left:s.top)+this.animatedScroll}}if(\"number\"==typeof t&&(t+=i,t=Math.round(t),this.options.infinite?c&&(this.targetScroll=this.animatedScroll=this.scroll):t=clamp(0,t,this.limit),t!==this.targetScroll)){if(this.userData=d,e)return this.animatedScroll=this.targetScroll=t,this.setScroll(this.scroll),this.reset(),this.preventNextNativeScrollEvent(),this.emit(),null==h||h(this),void(this.userData={});c||(this.targetScroll=t),this.animate.fromTo(this.animatedScroll,t,{duration:o,easing:n,lerp:l,onStart:()=>{s&&(this.isLocked=!0),this.isScrolling=\"smooth\",null==r||r(this)},onUpdate:(t,i)=>{this.isScrolling=\"smooth\",this.lastVelocity=this.velocity,this.velocity=t-this.animatedScroll,this.direction=Math.sign(this.velocity),this.animatedScroll=t,this.setScroll(this.scroll),c&&(this.targetScroll=t),i||this.emit(),i&&(this.reset(),this.emit(),null==h||h(this),this.userData={},this.preventNextNativeScrollEvent())}})}}}preventNextNativeScrollEvent(){this.__preventNextNativeScrollEvent=!0,requestAnimationFrame((()=>{delete this.__preventNextNativeScrollEvent}))}get rootElement(){return this.options.wrapper===window?document.documentElement:this.options.wrapper}get limit(){return this.options.__experimental__naiveDimensions?this.isHorizontal?this.rootElement.scrollWidth-this.rootElement.clientWidth:this.rootElement.scrollHeight-this.rootElement.clientHeight:this.dimensions.limit[this.isHorizontal?\"x\":\"y\"]}get isHorizontal(){return\"horizontal\"===this.options.orientation}get actualScroll(){return this.isHorizontal?this.rootElement.scrollLeft:this.rootElement.scrollTop}get scroll(){return this.options.infinite?function modulo(t,i){return(t%i+i)%i}(this.animatedScroll,this.limit):this.animatedScroll}get progress(){return 0===this.limit?1:this.scroll/this.limit}get isScrolling(){return this.__isScrolling}set isScrolling(t){this.__isScrolling!==t&&(this.__isScrolling=t,this.updateClassName())}get isStopped(){return this.__isStopped}set isStopped(t){this.__isStopped!==t&&(this.__isStopped=t,this.updateClassName())}get isLocked(){return this.__isLocked}set isLocked(t){this.__isLocked!==t&&(this.__isLocked=t,this.updateClassName())}get isSmooth(){return\"smooth\"===this.isScrolling}get className(){let t=\"lenis\";return this.isStopped&&(t+=\" lenis-stopped\"),this.isLocked&&(t+=\" lenis-locked\"),this.isScrolling&&(t+=\" lenis-scrolling\"),\"smooth\"===this.isScrolling&&(t+=\" lenis-smooth\"),t}updateClassName(){this.cleanUpClassName(),this.rootElement.className=`${this.rootElement.className} ${this.className}`.trim()}cleanUpClassName(){this.rootElement.className=this.rootElement.className.replace(/lenis(-\\w+)?/g,\"\").trim()}}export{Lenis as default};\n//# sourceMappingURL=lenis.mjs.map\n","// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  isRunning: boolean = false\r\n  value: number = 0\r\n  from: number = 0\r\n  to: number = 0\r\n  lerp?: number\r\n  duration?: number = 0\r\n  easing?: Function\r\n  currentTime: number = 0\r\n  onUpdate?: Function\r\n\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    {\r\n      lerp,\r\n      duration,\r\n      easing,\r\n      onStart,\r\n      onUpdate,\r\n    }: {\r\n      lerp?: number\r\n      duration?: number\r\n      easing?: Function\r\n      onStart?: Function\r\n      onUpdate?: Function\r\n    }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\ntype DimensionsOptions = {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  autoResize?: boolean\r\n  debounce?: number\r\n}\r\n\r\nexport class Dimensions {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  width: number = 0\r\n  height: number = 0\r\n  scrollWidth: number = 0\r\n  scrollHeight: number = 0\r\n  debouncedResize?: Function\r\n  wrapperResizeObserver?: ResizeObserver\r\n  contentResizeObserver?: ResizeObserver\r\n\r\n  // @ts-ignore\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  }: DimensionsOptions = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener(\r\n          'resize',\r\n          this.debouncedResize as EventListener,\r\n          false\r\n        )\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(\r\n          this.debouncedResize as ResizeObserverCallback\r\n        )\r\n        this.wrapperResizeObserver.observe(this.wrapper as HTMLElement)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(\r\n        this.debouncedResize as ResizeObserverCallback\r\n      )\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener(\r\n      'resize',\r\n      this.debouncedResize as EventListener,\r\n      false\r\n    )\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit(): {\r\n    x: number\r\n    y: number\r\n  } {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  events: Record<string, Function[]>\r\n\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event: string, ...args: any[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(callback) || (this.events[event] = [callback])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n    }\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  element: HTMLElement | Window\r\n  wheelMultiplier: number\r\n  touchMultiplier: number\r\n  touchStart: {\r\n    x: number | null\r\n    y: number | null\r\n  }\r\n  emitter: Emitter\r\n  lastDelta: {\r\n    x: number\r\n    y: number\r\n  } = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  windowWidth: number = 0\r\n  windowHeight: number = 0\r\n\r\n  constructor(\r\n    element: HTMLElement | Window,\r\n    { wheelMultiplier = 1, touchMultiplier = 1 }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel as EventListener, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel as EventListener)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener\r\n    )\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - (this.touchStart?.x ?? 0)) * this.touchMultiplier\r\n    const deltaY = -(clientY - (this.touchStart?.y ?? 0)) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype Overwrite<T, R> = Omit<T, keyof R> & R\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\ntype Scrolling = boolean | 'native' | 'smooth'\r\n\r\ntype onVirtualScrollOptions = {\r\n  deltaX: number\r\n  deltaY: number\r\n  event: WheelEvent | TouchEvent\r\n}\r\n\r\nexport type LenisOptions = Partial<{\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  wheelEventsTarget: Window | HTMLElement\r\n  eventsTarget: Window | HTMLElement\r\n  smoothWheel: boolean\r\n  syncTouch: boolean\r\n  syncTouchLerp: number\r\n  touchInertiaMultiplier: number\r\n  duration: number\r\n  easing: EasingFunction\r\n  lerp: number\r\n  infinite: boolean\r\n  orientation: Orientation\r\n  gestureOrientation: GestureOrientation\r\n  touchMultiplier: number\r\n  wheelMultiplier: number\r\n  autoResize: boolean\r\n  prevent: (node: Element) => boolean\r\n  virtualScroll: (data: onVirtualScrollOptions) => boolean\r\n  __experimental__naiveDimensions: boolean\r\n}>\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: Scrolling = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n  __preventNextNativeScrollEvent?: boolean\r\n  __resetVelocityTimeout?: number\r\n\r\n  isTouching?: boolean\r\n  time: number\r\n  userData: Object = {}\r\n  lastVelocity: number = 0\r\n  velocity: number = 0\r\n  direction: 1 | -1 | 0 = 0\r\n  options: Overwrite<\r\n    LenisOptions,\r\n    {\r\n      wrapper: NonNullable<LenisOptions['wrapper']>\r\n    }\r\n  >\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  animate: Animate\r\n  emitter: Emitter\r\n  dimensions: Dimensions\r\n  virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent,\r\n    virtualScroll,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    // @ts-expect-error\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (\r\n      !wrapper ||\r\n      wrapper === document.documentElement ||\r\n      wrapper === document.body\r\n    ) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      virtualScroll,\r\n      __experimental__naiveDimensions,\r\n    } as LenisOptions\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.options.wrapper.addEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n    this.options.wrapper.removeEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll: number) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\r\n    if (event.button === 1) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = (data: onVirtualScrollOptions) => {\r\n    if (\r\n      typeof this.options.virtualScroll === 'function' &&\r\n      this.options.virtualScroll(data) === false\r\n    )\r\n      return\r\n\r\n    const { deltaX, deltaY, event } = data\r\n\r\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\r\n\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node instanceof Element &&\r\n          ((typeof prevent === 'function' && prevent?.(node)) ||\r\n            node.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n            (node.classList?.contains('lenis') &&\r\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(\r\n        this.animatedScroll - lastScroll\r\n      ) as Lenis['direction']\r\n      // this.isSmooth = false\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (\r\n      typeof target === 'string' &&\r\n      ['top', 'left', 'start'].includes(target)\r\n    ) {\r\n      target = 0\r\n    } else if (\r\n      typeof target === 'string' &&\r\n      ['bottom', 'right', 'end'].includes(target)\r\n    ) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target instanceof HTMLElement && target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.rootElement.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    this.userData = userData\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.preventNextNativeScrollEvent()\r\n      this.emit()\r\n      onComplete?.(this)\r\n      this.userData = {}\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n          this.userData = {}\r\n\r\n          // avoid emitting event twice\r\n          this.preventNextNativeScrollEvent()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  private preventNextNativeScrollEvent() {\r\n    this.__preventNextNativeScrollEvent = true\r\n\r\n    requestAnimationFrame(() => {\r\n      delete this.__preventNextNativeScrollEvent\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return (\r\n      this.options.wrapper === window\r\n        ? document.documentElement\r\n        : this.options.wrapper\r\n    ) as HTMLElement\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: Scrolling) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n}\r\n"],"names":["$8ecb29f509dc0bd0$var$clamp","t","i","e","Math","max","min","$8ecb29f509dc0bd0$var$Animate","constructor","isRunning","value","from","to","duration","currentTime","advance","easing","s","lerp","exp","round","stop","onUpdate","call","fromTo","o","onStart","n","l","$8ecb29f509dc0bd0$var$Dimensions","wrapper","content","autoResize","debounce","width","height","scrollWidth","scrollHeight","resize","onWrapperResize","onContentResize","window","innerWidth","innerHeight","HTMLElement","clientWidth","clientHeight","debouncedResize","arguments","clearTimeout","setTimeout","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","removeEventListener","limit","x","y","$8ecb29f509dc0bd0$var$Emitter","events","emit","length","on","push","filter","off","$8ecb29f509dc0bd0$var$t","$8ecb29f509dc0bd0$var$VirtualScroll","wheelMultiplier","touchMultiplier","lastDelta","windowWidth","windowHeight","onTouchStart","clientX","clientY","targetTouches","touchStart","emitter","deltaX","deltaY","event","onTouchMove","r","h","onTouchEnd","onWheel","deltaMode","onWindowResize","element","passive","$8ecb29f509dc0bd0$export$2e2bcd8739ae039","document","documentElement","wheelEventsTarget","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","a","pow","c","infinite","d","orientation","u","gestureOrientation","p","m","v","g","prevent","w","virtualScroll","S","__experimental__naiveDimensions","f","__isScrolling","__isStopped","__isLocked","userData","lastVelocity","velocity","direction","onPointerDown","button","reset","onVirtualScroll","options","ctrlKey","type","includes","isTouching","isStopped","isLocked","composedPath","slice","indexOf","rootElement","find","Element","hasAttribute","classList","contains","preventDefault","isScrolling","animate","abs","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","animatedScroll","actualScroll","sign","lenisVersion","body","dimensions","updateClassName","time","cleanUpClassName","setScroll","isHorizontal","scrollLeft","scrollTop","start","raf","offset","immediate","lock","onComplete","force","querySelector","nodeType","getBoundingClientRect","left","top","scroll","preventNextNativeScrollEvent","requestAnimationFrame","progress","isSmooth","className","trim","replace","$44dff8ba698aec05$var$e","Array","$44dff8ba698aec05$var$s","Symbol","iterator","next","bind","isArray","toString","name","test","done","TypeError","$44dff8ba698aec05$var$i","hasOwnProperty","$44dff8ba698aec05$var$r","scrollElements","rootMargin","IORaf","observer","_init","prototype","IntersectionObserver","forEach","$el","target","isIntersecting","isAlreadyIntersected","_setInview","_setOutOfView","unobserve","setInteractivityOn","setInview","setInteractivityOff","setOutOfView","attributes","scrollRepeat","$44dff8ba698aec05$var$o","reduce","$44dff8ba698aec05$var$l","id","modularInstance","subscribeElementUpdateFn","unsubscribeElementUpdateFn","needRaf","scrollOrientation","intersection","metrics","currentScroll","translateValue","lastProgress","progressModularModules","isInview","isInteractive","isInFold","isFirstResize","scrollClass","dataset","scrollOffset","scrollPosition","scrollModuleProgress","scrollCssProgress","scrollEventProgress","scrollSpeed","parseFloat","scrollCall","scrollCallSelf","scrollIgnoreFold","scrollEnableTouchSpeed","end","offsetStart","offsetEnd","bcr","scrollY","scrollX","_getProgressModularModules","_resize","onResize","onRender","smooth","_computeProgress","isNaN","style","transform","add","_getScrollCallFrom","_dispatchCall","remove","_computeMetrics","_computeIntersection","split","parseInt","_setCssProgress","_setCustomEventProgress","moduleName","moduleId","setProperty","CustomEvent","detail","dispatchEvent","keys","entries","modules","way","$44dff8ba698aec05$var$a","$44dff8ba698aec05$var$c","triggerRootMargin","rafRootMargin","$scrollContainer","triggeredScrollElements","RAFScrollElements","scrollElementsToUpdate","IOTriggerInstance","IORafInstance","console","error","querySelectorAll","_subscribeScrollElements","concat","_unsubscribeAllScrollElements","removeScrollElements","splice","_unsubscribeElementUpdate","addScrollElements","_checkRafNeeded","_subscribeElementUpdate","map","join","$44dff8ba698aec05$var$h","resizeElements","resizeCallback","$resizeElements","isFirstObserve","lenisOptions","autoStart","scrollCallback","initCustomTicker","destroyCustomTicker","rafPlaying","lenisInstance","coreInstance","rafInstance","ROInstance","_onRenderBind","_onResizeBind","_onScrollToBind","b","warn","_onRender","_onScrollTo","_onResize","setAttribute","_bindEvents","_unbindEvents","_bindScrollToEvents","_unbindScrollToEvents","Date","now","currentTarget","getAttribute","_raf","cancelAnimationFrame","el","multiplier","IO","_ref","_ref$rootMargin","this","_proto","_this","entry","$targetItem","item","_iterator","_step","_createForOfIteratorHelperLoose","$scrollElement","scrollElement","mapRange","inMin","inMax","outMin","outMax","closestNumber","array","prev","curr","ScrollElement","_this$$el$dataset$scr","_this$$el$dataset$scr2","_this$$el$dataset$scr3","_this$$el$dataset$scr4","_this$$el$dataset$scr5","_ref2","_ref3","wSize","_this$metrics$bcr","metricsSize","undefined","scrollPositionStart","scrollPositionEnd","viewportStart","viewportEnd","forcedProgress","modularModules","currentProgress","customEventName","customEvent","modulesIdNames","key","_iterator2","_step2","_step3","_iterator3","module","moduleObj","closestIntersectionValue","_this$attributes$scro","_this$attributes","callParameters","callSelf","_targetModuleId","targetModuleId","func","ATTRIBUTES_THAT_NEED_RAF","Core","$scrollElements","$scrollElementsArr","$oldContainer","$scrollElementsToRemove","index","targetScrollElementToUpdate","targetScrollElement","scrollElementItem","$newContainer","ids","fromIndex","toObserve","scrollElementInstance","scrollElementToUpdate","attributesThatNeedRaf","removeAttribute","attributeToRemove","attribute","RO","_ref$resizeCallback","LocomotiveScroll","_temp","_ref$lenisOptions","_ref$autoResize","_ref$autoStart","_ref$scrollCallback","_i","_Object$entries","_this$lenisInstance","Lenis","_extends","_this$coreInstance","_this2","_this2$coreInstance","$container","_this3","$rootContainer","$scrollToElements","_this4","_this5","_this5$coreInstance","_this$lenisInstance2","_this$coreInstance2","_event$currentTarget","$target","_this$lenisInstance3","_this$lenisInstance4","_this$coreInstance3","_this$coreInstance4","_this6","_this$lenisInstance5","_this7","clamp","input","Animate","deltaTime","completed","linearProgress","easedProgress","damp","lambda","dt","_a","Dimensions","debounceValue","callback","delay","timer","args","context","_b","Emitter","callbacks","LINE_HEIGHT","VirtualScroll","_d","_c","data","isTouch","isWheel","isClick","isUnknownGesture","node","_e","delta","hasTouchInertia","lastScroll","wrapperRect","rect","modulo"],"version":3,"file":"index.3b11fd0d.js.map"}